\documentclass[11pt, handout]{beamer}

\makeatletter
\g@addto@macro\@verbatim\tiny
\makeatother

\usepackage{graphicx}
\usepackage{eurosym}



\usetheme{Berlin}


\title[Life Insurance and Mortality Swaps]{Life Insurance and Mortality Swaps\\Dublin R}
\author{Mick Cooney}
\date{23 June 2015}

<<setoptions, include=TRUE, echo=FALSE, cache=FALSE, results='hide'>>=
opts_knit$set(root.dir = ".")

opts_chunk$set(fig.path = '.');
opts_chunk$set(fig.align = 'center');
opts_chunk$set(out.width = '11.5cm');
opts_chunk$set(out.height =   '6cm');

opts_chunk$set(size = 'tiny');

set.seed(42);

@

<<init, echo=FALSE, cache=FALSE, results='hide', warning=FALSE, message=FALSE>>=
dev_mode(TRUE);

require(ggplot2);
require(data.table);
require(mcmortswap);
require(scales);
require(reshape2);
library(xlsx);

@



\begin{document}

\begin{frame}
\titlepage
\end{frame}



%%%
%%%  Section: Introduction
%%%

\section{Introduction}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Structure of Talk}

\begin{enumerate}
    \item Pricing Life Insurance
    \item MonteCarlo Simulation and Interest-rate Swaps
    \item Pricing Mortality Swaps
\end{enumerate}

\end{frame}



%%%
%%% New Frame
%%%

\begin{frame}[fragile]{Before I Begin...}
\begin{center}
\includegraphics[height=5.5cm]{physicists_xkcd.png}
\end{center}

\end{frame}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Initial Idea for Pricing Mortality Swaps}

\begin{center}
Use idea from interest rate swaps:

\vspace{6mm}

`Swap' the cashflows
\end{center}

\end{frame}



%%%
%%%  Section: Introduction
%%%

\section{Life Insurance}

%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Pricing Life Insurance}

\[ \sum_{t=0}^{N-1} A e^{-rt} = \sum_{t=1}^{N} L \, q(t) e^{-rt} \]

\noindent
where
\begin{eqnarray*}
A &=& \text{policy premium}\\
L &=& \text{death payment}\\
q(t) &=& \text{curtate mortality from time $t-1$ to $t$}\\
r &=& \text{interest rate}\\
N &=& \text{term of the policy}
\end{eqnarray*}

\end{frame}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Lifetables}

<<show_lifetable, echo=FALSE, cache=FALSE, results='show', warning=FALSE, message=FALSE>>=

NVSR.Table01.dt <- read.xlsx("Table01.xlsx", sheetIndex = 1, rowIndex = 7:107);
setDT(NVSR.Table01.dt);

setnames(NVSR.Table01.dt, c("Age", "q(x)", "l(x)", "d(x)", "L(x)", "T(x)", "e(x)"));

print(head(NVSR.Table01.dt, n = 10));
@


\end{frame}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]

<<show_simple_lifetable, echo=FALSE, cache=FALSE, results='show', warning=FALSE, message=FALSE>>=

lifetable.dt <- fread("lifetable.csv");

print(head(lifetable.dt, n = 10));
@


\end{frame}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Calculating the Premium}

Price for 20-year policy of a 30 year old (per \$100,000 assured)

<<price_insurance_code, echo=TRUE, cache=FALSE, results='show', warning=FALSE, message=FALSE>>=
price.term.assurance <- function(q, A = 200000, r = 0.05, P = 0) {
    ### Calculates the price of term assurance by equating the expected values

    N <- length(q);
    c <- cumprod(1 - q);
    c <- c(1, c[1:(N - 1)]);

    LHS <- sum(c * exp(-r * 0:(N-1)));

    RHS <- P + sum(A * q * exp(-r * 1:N));

    return(RHS / LHS);
}

price.term.assurance(lifetable.dt[age > 30][age <= 50]$qx, A = 100000, r = 0.05, P = 0);
@

\end{frame}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Calculating the MUR multiplier}

<<calculate_multiplier, echo=TRUE, cache=FALSE, results='show', warning=FALSE, message=FALSE>>=
A  <- 100000;
qx <- lifetable.dt[age > 30][age <= 50]$qx;
r  <- 0.05;

calculate.multiple.diff <- function(MUR, mult) {
    MUR * price.term.assurance(qx, A = A, r = r, P = 0) -
        price.term.assurance(mult * qx, A = A, r = r, P = 0);
}

MUR.values <- seq(0, 10, by = 0.25);

MUR.mult <- sapply(MUR.values, function(MUR) {
    optimize(function(mult) abs(calculate.multiple.diff(MUR, mult)), c(0, 20))$minimum;
});

print(MUR.mult);
@

\end{frame}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Calculating the MUR multiplier}

<<calculate_multiplier_plot, echo=FALSE, cache=FALSE, results='show', warning=FALSE, message=FALSE>>=
qplot(MUR.values, MUR.mult, geom = 'line', xlab = "MUR", ylab = "Multiplier") +
    geom_line(aes(x = MUR.values, y = MUR.values), colour = 'red') +
    expand_limits(y = 0);
@

\end{frame}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Calculating the MUR multiplier}

Try for 45-year old with 15-year policy:

<<calculate_multiplier_plot_alt, echo=FALSE, cache=FALSE, results='show', warning=FALSE, message=FALSE>>=
qx <- lifetable.dt[age > 45][age <= 60]$qx;
r  <- 0.05;

calculate.multiple.diff <- function(MUR, mult) {
    MUR * price.term.assurance(qx, A = A, r = r, P = 0) -
        price.term.assurance(mult * qx, A = A, r = r, P = 0);
}

MUR.values <- seq(0, 10, by = 0.25);

MUR.mult <- sapply(MUR.values, function(MUR) {
    optimize(function(mult) abs(calculate.multiple.diff(MUR, mult)), c(0, 20))$minimum;
});

qplot(MUR.values, MUR.mult, geom = 'line', xlab = "MUR", ylab = "Multiplier") +
    geom_line(aes(x = MUR.values, y = MUR.values), colour = 'red') +
    expand_limits(y = 0);
@

\end{frame}



%%%
%%%  Section: Other Concepts
%%%

\section{Other Concepts}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{MonteCarlo Methods}

Calculating the value of $\pi$:
\vspace{3mm}
\begin{center}
\includegraphics[height=5.5cm]{pi_mccalc-0.png}
\end{center}

\end{frame}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{MonteCarlo Methods}

Calculating the NAV of a fund of correlated assets with a yearly drawdown:
\begin{center}
\includegraphics[height=5.5cm,width=11cm]{correlated_asset_fund_drawdown.png}
\end{center}

\end{frame}



%%%
%%% New Frame
%%%

\begin{frame}[fragile]{Interest Rate Swaps}
\begin{center}
\includegraphics[height=5.5cm]{interest_rate_swap.png}
\end{center}

\end{frame}



%%%
%%% New Frame
%%%

\begin{frame}[fragile]{Interest Rate Swaps}
\begin{center}
\includegraphics[height=5.5cm]{interest_rate_swap_bank.png}
\end{center}

\end{frame}



%%%
%%%  Section: Pricing Mortality Swaps
%%%

\section{Pricing Mortality Swaps}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Assumptions}

Starting point --- some generalisable for flexibility

\begin{enumerate}
    \item<2-> No consideration of credit risk
    \item<3-> Swap has fixed lifetime
    \item<4-> All annuities have annual payments received at same time
    \item<5-> Fixed cost of capital over lifetime
    \item<6-> All annuitants have undergone underwriting evaluation
    \item<7-> APV calculations require a specific lifetable
    \item<8-> All annuities have a lifetime at least as long as the swap lifetime
\end{enumerate}

\end{frame}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Swap Annuity Portfolio}

Random portfolio of annuities:

<<show_portfolio, echo=FALSE, cache=FALSE, results='show', warning=FALSE, message=FALSE>>=

mortport.dt <- fread("mortswap_portfolio.csv");

mortport.display.dt <- data.table(mortport.dt);
mortport.display.dt[, amount := dollar(amount)];
@

\end{frame}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Simulation Approach}

Simulation example: 10 simulations of 5 years

\vspace{3mm}
$1$ -- annuitant still alive

$0$ -- annuitant has deceased

<<show_death_sim, echo=FALSE, cache=FALSE, results='show', warning=FALSE, message=FALSE>>=

death.flag  <- matrix(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                        1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
                        1, 1, 0, 1, 1, 1, 1, 1, 0, 1,
                        1, 1, 0, 1, 0, 1, 1, 1, 0, 1,
                        1, 1, 0, 1, 0, 1, 1, 1, 0, 1),
                      byrow = TRUE, ncol = 10, nrow = 5);

colnames(death.flag) <- paste("sim", 1:10, sep = '');
rownames(death.flag) <- paste("year", 1:5, sep = '');

print(death.flag);
@


\end{frame}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Lifetable Issues}

\begin{itemize}
    \item For actuarial discounts of cashflows, swap needs an agreed lifetable
    \item Currently using the National Vital Statistics Reports 2010
    \item If same lifetable used for valuation and only guaranteeing discounted payments, expected value of swap is 0.
    \item MonteCarlo simulation can use different lifetables
    \item Could extend this to have different lifetable for each annuitant
\end{itemize}

\end{frame}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Running the Simulation}

Run the calculation:

<<calculate_swap, echo=TRUE, cache=FALSE, results='show', warning=FALSE, message=FALSE>>=

mortport.dt  <- fread("mortswap_portfolio.csv");
lifetable.dt <- fread("lifetable.csv");

n.sim <- 1000;

mortswap.value.sim <- calculate.mortality.swap.price(mortport.dt,
                                                     lifetable           = lifetable.dt,
                                                     hedge.apv.cashflows = TRUE,
                                                     interest.rate       = 0.05,
                                                     years.in.force      = 20,
                                                     n.sim               = n.sim,
                                                     return.all.data     = FALSE);

print(dollar_format(largest_with_cents = 1e8)(mortswap.value.sim[1:20]));
@

\end{frame}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Viewing the Output}

Simulated cashflows\\(excludes initial premium):\\

<<viewing_output, echo=FALSE, cache=FALSE, results='show', warning=FALSE, message=FALSE>>=
mortswap.plot <- qplot(1:n.sim / n.sim, sort(mortswap.value.sim), geom = 'line',
    xlab = 'Percentile', ylab = 'Net Cashflow/Loss') +
    scale_y_continuous(label = dollar);

print(mortswap.plot);
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Viewing the Output}

Simulated cashflows\\(excludes initial premium):\\

<<viewing_output_tail, echo=FALSE, cache=FALSE, results='show', warning=FALSE, message=FALSE>>=
mortswap.plot + geom_rect(aes(xmin = 0.95, xmax = 1, ymin = min(mortswap.value.sim), ymax = max(mortswap.value.sim)),
                          alpha = 0.01, size = 0.1, colour = 'grey', fill = 'grey');
@

\end{frame}



%%%
%%%  Section: Pricing Tail Risk
%%%

\section{Pricing Tail Risk}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Pricing Tail Risk}

How to price the tail risk?

\vspace{3mm} \pause Michael Lewis \emph{``In Nature's Casino''} -- NYT Aug 2007\\
\url{http://www.nytimes.com/2007/08/26/magazine/26neworleans-t.html?pagewanted=all}

\vspace{3mm} \pause Consensus around $4\times$ expected loss

\vspace{3mm} \pause Need to calculate tail averages

\end{frame}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Pricing Tail Risk}

<<calc_quantile_average, echo=TRUE, cache=FALSE, results='show', warning=FALSE, message=FALSE>>=
calculate.quantile.averages <- function(x, probs) {
    return(sapply(quantile(x, probs), function(qtl) mean(x[x >= qtl])));
}

calculate.quantile.averages(0:10, 0.8);

calculate.quantile.averages(0:100, 0.8)
@

\end{frame}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Pricing Tail Risk}

<<tail_averages, echo=FALSE, cache=FALSE, results='show', warning=FALSE, message=FALSE>>=
tail.probs <- c(0.75, 0.80, 0.85, 0.90, 0.95, 0.99, 0.995);

losses <- calculate.quantile.averages(mortswap.value.sim, tail.probs);

qplot(tail.probs * 100, losses, geom = 'line', xlab = 'Tail Percentile', ylab = "Mean Loss Amount", title = "Average Tail Loss by Percentile") +
    scale_y_continuous(label = dollar) + expand_limits(y = 0);
@

\end{frame}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Pricing Tail Risk}

Ensemble of 1,000 valuations of 10,000 iterations:

<<tail_averages_ensemble, echo=FALSE, cache=FALSE, results='show', warning=FALSE, message=FALSE>>=
load("mortswap.data.rda");

qplot(value, data = melt(ens.data[4:7,]), geom = 'density', xlab = 'Mean Loss Amount', ylab = 'Probability Density') +
    facet_wrap(~ Var1, scales = 'free') +
    scale_x_continuous(label = dollar) +
    theme(axis.text.x = element_text(angle = 15));
@

\end{frame}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Time-in-Force Dependency}

Scaling of 95\% mean with time-in-force of swap:

<<show_lifetime_dep, echo=FALSE, cache=TRUE, results='show', warning=FALSE, message=FALSE>>=

times.in.force <- 1:20;
n.sim          <- 2000;

tif.value <- sapply(times.in.force, function(iter.tif) {
    mortswap.value.sim <- calculate.mortality.swap.price(mortport.dt,
                                                         lifetable           = lifetable.dt,
                                                         hedge.apv.cashflows = TRUE,
                                                         interest.rate       = 0.05,
                                                         years.in.force      = iter.tif,
                                                         n.sim               = n.sim,
                                                         return.all.data     = FALSE);


    iterval <- calculate.quantile.averages(mortswap.value.sim, 0.95);

    return(iterval);
});

qplot(times.in.force, tif.value, geom = 'line', xlab = "Swap Time-in-Force (years)", ylab = "95% Mean Loss Value") +
    scale_y_continuous(label = dollar) + expand_limits(y = 0);
@


\end{frame}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Time-in-Force Dependency}

Scaling of 90\% mean with time-in-force of swap:

<<show_lifetime_dep_alt, echo=FALSE, cache=TRUE, results='show', warning=FALSE, message=FALSE>>=

times.in.force <- 1:20;
n.sim          <- 2000;

tif.value <- sapply(times.in.force, function(iter.tif) {
    mortswap.value.sim <- calculate.mortality.swap.price(mortport.dt,
                                                         lifetable           = lifetable.dt,
                                                         hedge.apv.cashflows = TRUE,
                                                         interest.rate       = 0.05,
                                                         years.in.force      = iter.tif,
                                                         n.sim               = n.sim,
                                                         return.all.data     = FALSE);


    iterval <- calculate.quantile.averages(mortswap.value.sim, 0.90);

    return(iterval);
});

qplot(times.in.force, tif.value, geom = 'line', xlab = "Swap Time-in-Force (years)", ylab = "95% Mean Loss Value") +
    scale_y_continuous(label = dollar) + expand_limits(y = 0);
@

\end{frame}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Time-in-Force Dependency (Ensemble)}

Scaling of 95\% mean with time-in-force of swap:

<<show_lifetime_dep_ensemble, echo=TRUE, cache=TRUE, results='show', warning=FALSE, message=FALSE>>=

times.in.force <- 1:20;
n.sim          <- 1000;
n.ens          <- 10;

calculate.tif <- function(tif) {
    mortswap.value.sim <- calculate.mortality.swap.price(mortport.dt,
                                                         lifetable           = lifetable.dt,
                                                         hedge.apv.cashflows = TRUE,
                                                         interest.rate       = 0.05,
                                                         years.in.force      = tif,
                                                         n.sim               = n.sim,
                                                         return.all.data     = FALSE);


    iterval <- calculate.quantile.averages(mortswap.value.sim, 0.95);
}

tif.ensemble <- sapply(times.in.force, function(iter.tif) {
    replicate(n.ens, calculate.tif(iter.tif))
});
@
\end{frame}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Time-in-Force Dependency (Ensemble)}

<<show_lifetime_dep_ensemble_plot, echo=FALSE, cache=FALSE, results='show', warning=FALSE, message=FALSE>>=
load("tif.ensemble.1000.100.rda");

qplot(Var2, value, data = melt(tif.ensemble.1000.100), geom = 'line', group = Var1, alpha = I(0.1), size = I(0.5), xlab = 'Year', ylab = 'Mean Loss Average') +
    scale_y_continuous(label = dollar) + expand_limits(y = 0);
@

\end{frame}




\end{document}
