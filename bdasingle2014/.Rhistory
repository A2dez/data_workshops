dbeta
rbeta
rbeta(10, (0.49) * 100, 0.51 * 100)
round(rbeta(10, (0.49) * 100, 0.51 * 100), 2)
round(rbeta(10, (0.49) * 1000, 0.51 * 1000), 2)
mint1.mu <- 0.48; mint1.K <- 1000;
mint2.mu <- 0.50; mint2.K <- 10;
mint3.mu <- 0.51; mint2.K <- 5000;
coins.1 <- rbeta(500, mint1.mu * mint1.K, (1 - mint1.mu) * mint1.K)
coins.1
coins.1 <- rbeta(1000, mint2.mu * mint2.K, (1 - mint2.mu) * mint2.K)
coins.1 <- rbeta(500, mint1.mu * mint1.K, (1 - mint1.mu) * mint1.K)
coins.2 <- rbeta(1000, mint2.mu * mint2.K, (1 - mint2.mu) * mint2.K)
coins.3 <- rbeta(750, mint3.mu * mint3.K, (1 - mint3.mu) * mint3.K)
mint3.mu <- 0.51; mint3.K <- 5000;
mint2.mu <- 0.50; mint2.K <- 10;
coins.2 <- rbeta(1000, mint2.mu * mint2.K, (1 - mint2.mu) * mint2.K)
coins.3 <- rbeta(750, mint3.mu * mint3.K, (1 - mint3.mu) * mint3.K)
coins.1
coins.2
coins3
coins.3
lsos()
library(data.table)
mint1.mu
mint1.mu; mint1.K
mint2.mu; mint2.K
mint3.mu; mint3.K
data.table(mintid = 1:3, mu = c(0.48, 0.50, 0.51), K = c(1000, 10, 5000)), 
data.table(mintid = 1:3, mu = c(0.48, 0.50, 0.51), K = c(1000, 10, 5000))
lsos()
rm(coins.1, coins.2, coins.3)
rm(mint1.mu, mint2.mu, mint3.mu)
lsos()
ls(pattern = 'mint')
rm(list = ls(pattern = 'mint'))
lsos()
data.table(mintid = 1:3, mu = c(0.48, 0.50, 0.51), K = c(1000, 10, 5000))
mint.dt <- data.table(mintid = 1:3, mu = c(0.48, 0.50, 0.51), K = c(1000, 10, 5000))
toss.counts <- c(200, 1000, 500, 250, 2000)
toss.counts <- sort(c(200, 1000, 500, 250, 2000))
toss.counts
mint.dt <- data.table(mintid = 1:3, mu = c(0.48, 0.50, 0.51), K = c(1000, 10, 5000), coincount = c(1000, 750, 1000))
mint.dt
mint.dt[, data.table(coinmu = rbeta(coincount, mu * K, (1 - mu) * K))), by = mintid]
mint.dt[,function(dt) data.table(coinmu = rbeta(dt$coincount, dt$mu * dt$K, (1 - dt$mu) * dt$K))), by = mintid]
mint.dt[,function(dt) data.table(coinmu = rbeta(dt$coincount, dt$mu * dt$K, (1 - dt$mu) * dt$K)), by = mintid]
mint.dt[, (function(dt) data.table(coinmu = rbeta(dt$coincount, dt$mu * dt$K, (1 - dt$mu) * dt$K)))(.SD), by = mintid]
coin.dt <- mint.dt[, (function(dt) data.table(coinmu = rbeta(dt$coincount, dt$mu * dt$K, (1 - dt$mu) * dt$K)))(.SD), by = mintid]
coin.dt
coin.dt[, coinid := 1:2750]
5A5A
lsos9)
lsos()
sample
sample(toss.counts, 1, replace = TRUE)
sample(toss.counts, 2750, replace = TRUE)
coin.dt[, toss.count := sample(toss.counts, 2750, replace = TRUE)]
coin.dt
rbinom
coin.dt[, rbinom(toss.count, 1, coinmu), by = coinid]
coin.dt[, list(outcome = rbinom(toss.count, 1, coinmu)), by = coinid]
toss.dt <- coin.dt[, list(outcome = rbinom(toss.count, 1, coinmu)), by = coinid]
coin.dt
merge(coin.dt[, list(mintid, coinid)], toss.dt[, list(coinid, outcome)], by = 'coinid')
data.dt <- merge(coin.dt[, list(mintid, coinid)], toss.dt[, list(coinid, outcome)], by = 'coinid')
lsos()
data.dt[, dim(.SD)[1], by = coinid]
data.dt[, dim(.SD)[1], by = list(mintid, coinid)]
data.dt
as.matrix(data.dt)
data.matrix <- as.matrix(data.dt)
lsos()
str(data.matrix)
head(data.matrix)
data.matrix[1:10,]
data.matrix[1:10, ]
data.matrix[1:20, ]
data.dt[, mean(outcome), by = list(coinid, mintid)]
data.dt[, mean(outcome), by = list(coinid, mintid)][, mean(V1), by = mintid]
data.dt[, .SD[1:sample(c(20, 50))], by = coinid]
data.reduced.dt <- data.dt[, .SD[1:sample(c(20, 50))], by = coinid]
warnings()
sample(c(20, 50))
sample(c(20, 50), 1)
sample(c(20, 50), 1)
sample(c(20, 50), 1)
sample(c(20, 50), 1)
sample(c(20, 50), 1)
data.reduced.dt <- data.dt[, .SD[1:sample(c(20, 50), 1)], by = coinid]
data.reduced.dt
data.reduced.dt[, dim(.SD)[1], by = coinid]
data.reduced.dt[, dim(.SD)[1], by = coinid]$V1
data.reduced.dt[, dim(.SD)[1], by = coinid]$V1 == 20
sum(data.reduced.dt[, dim(.SD)[1], by = coinid]$V1 == 20)
1421 / 2750
lsos()
mint.dt
coin.dt
data.dt
data.reduced.dt
writeRDS
saveRDS
serializeToConn
writeRDS
saveRDS(data.dt, file = 'data.dt.rds', compress = TRUE)
saveRDS(data.reduced.dt, file = 'data.reduced.dt.rds', compress = TRUE)
q()
test <- readRDS('data.dt.rds')
test
str(test)
library(data.table)
test
rm(test)
lsos()
q()
lsos()
library(data.table)
lsos()
data.dt
q()
y
