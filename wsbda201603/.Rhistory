setwd("~/githubrepos/dublin_r_workshops/bdaworkshop2013")
qplot(seq(0, 1, by = 0.01), dbeta(seq(0, 1, by = 0.01), 2, 2), geom = 'line')
library(ggplot2)
qplot(seq(0, 1, by = 0.01), dbeta(seq(0, 1, by = 0.01), 2, 2), geom = 'line')
qplot(seq(0, 1, by = 0.01), dbeta(seq(0, 1, by = 0.01), 5, 5), geom = 'line')
qplot(seq(0, 1, by = 0.01), dbeta(seq(0, 1, by = 0.01), 50, 50), geom = 'line')
qplot(seq(0, 1, by = 0.01), dbeta(seq(0, 1, by = 0.01), 2, 2), geom = 'line')
likelihood <- function(theta, n, k) { return(theta^k + (1-theta)^(n-k))}
likelihood(0.4, 5, 3)
likelihood(0.2, 5, 3)
likelihood(0.1, 5, 3)
qplot(seq(0, 1, by = 0.001), likelihood(seq(0, 1, by = 0.001), 5, 3), geom = 'line')
likelihood(0, 5, 3)
likelihood <- function(theta, n, k) { return(theta^k * (1-theta)^(n-k))}
qplot(seq(0, 1, by = 0.001), likelihood(seq(0, 1, by = 0.001), 5, 3), geom = 'line')
qplot(seq(0, 1, by = 0.01), dbeta(seq(0, 1, by = 0.01), 50, 50), geom = 'line')
qplot(seq(0, 1, by = 0.01), dbeta(seq(0, 1, by = 0.01), 5, 5), geom = 'line')
qplot(seq(0, 1, by = 0.01), dbeta(seq(0, 1, by = 0.01), 5, 5), geom = 'line') + geom_line(aes(y = dbeta(seq(0, 1, by = 0.01), 5 + 42, 5 + 58)), colour = 'red')
qplot(seq(0, 1, by = 0.01), dbeta(seq(0, 1, by = 0.01), 7, 3), geom = 'line') + geom_line(aes(y = dbeta(seq(0, 1, by = 0.01), 5 + 42, 5 + 58)), colour = 'red')
qplot(seq(0, 1, by = 0.01), dbeta(seq(0, 1, by = 0.01), 7, 3), geom = 'line') + geom_line(aes(y = dbeta(seq(0, 1, by = 0.01), 7 + 42, 3 + 58)), colour = 'red')
library(knitr)
knit2pdf("wsbda201603_worksheet.Rnw")
knit2pdf("wsbda201603_worksheet.Rnw")
knit2pdf("wsbda201603_worksheet.Rnw")
knit2pdf("wsbda201603_worksheet.Rnw")
knit2pdf("wsbda201603_worksheet.Rnw")
knit2pdf("wsbda201603_worksheet.Rnw")
knit2pdf("wsbda201603_worksheet.Rnw")
knit2pdf("wsbda201603_worksheet.Rnw")
knit2pdf("wsbda201603_worksheet.Rnw")
knit2pdf("wsbda201603_worksheet.Rnw")
knit2pdf("wsbda201603_worksheet.Rnw")
knit2pdf("wsbda201603_worksheet.Rnw")
knit2pdf("wsbda201603_worksheet.Rnw")
knit2pdf("wsbda201603_worksheet.Rnw")
knit2pdf("wsbda201603_worksheet.Rnw")
knit2pdf("wsbda201603_worksheet.Rnw")
knit2pdf("wsbda201603_worksheet.Rnw")
knit2pdf("wsbda201603_worksheet.Rnw")
knit2pdf("wsbda201603_worksheet.Rnw")
knit2pdf("wsbda201603_worksheet.Rnw")
knit2pdf("wsbda201603_worksheet.Rnw")
knit2pdf("wsbda201603_worksheet.Rnw")
knit2pdf("wsbda201603_worksheet.Rnw")
q()
y
source("wsexercise.2.R")
lsos()
qplot(theta.seq, beta0101.posterior, geom = 'line', xlim = c(0.60, 0.75)) +
    geom_line(aes(y = beta1005.posterior), color = 'red')

cointoss1000 <- readRDS("cointoss1000.rds");

H.count <- sum(cointoss1000);
T.count <- length(cointoss1000) - H.count;

beta0101.posterior <- dbeta(theta.seq, 1 + H.count, 1 + T.count);

qplot(theta.seq, beta0101, geom = 'line') + geom_line(aes(y = beta0101.posterior), color = 'red')


beta0202.posterior <- dbeta(theta.seq, 2 + H.count, 2 + T.count);

qplot(theta.seq, beta0202,           geom = 'line') + geom_line(aes(y = beta0202.posterior), color = 'red')
qplot(theta.seq, beta0101.posterior, geom = 'line') + geom_line(aes(y = beta0202.posterior), color = 'red')


beta1010.posterior <- dbeta(theta.seq, 10 + H.count, 10 + T.count);

qplot(theta.seq, beta1010,           geom = 'line') + geom_line(aes(y = beta1010.posterior), color = 'red')
qplot(theta.seq, beta0101.posterior, geom = 'line') + geom_line(aes(y = beta1010.posterior), color = 'red')


beta1005.posterior <- dbeta(theta.seq, 10 + H.count, 5 + T.count);

qplot(theta.seq, beta1005,           geom = 'line') + geom_line(aes(y = beta1005.posterior), color = 'red')
qplot(theta.seq, beta0101.posterior, geom = 'line') + geom_line(aes(y = beta1005.posterior), color = 'red')

qplot(theta.seq, beta1005,           geom = 'line') + geom_line(aes(y = beta1005.posterior), color = 'red')

qplot(theta.seq, beta0101.posterior, geom = 'line', xlim = c(0.50, 0.75)) +
    geom_line(aes(y = beta1005.posterior), color = 'red')

qplot(theta.seq, beta0101.posterior, geom = 'line', xlim = c(0.55, 0.70)) +
    geom_line(aes(y = beta1005.posterior), color = 'red')

lsos()
rm(list = ls())
source("wsexercise.2.R")
lsos()
qplot(theta.seq, beta0101.10.posterior, geom = 'line', xlim = c(0.50, 0.75)) +
    geom_line(aes(y = beta0101.1000.posterior), color = 'red')

qplot(theta.seq, beta0101.10.posterior, geom = 'line', xlim = c(0.25, 0.75)) +
    geom_line(aes(y = beta0101.1000.posterior), color = 'red')

qplot(theta.seq, beta0101.10.posterior, geom = 'line', xlim = c(0.1, 0.9)) +
    geom_line(aes(y = beta0101.1000.posterior), color = 'red')

qplot(theta.seq, beta0101, geom = 'line', xlim = c(0.1, 0.9)) +
    geom_line(aes(y = beta0101.10.posterior), color = 'red')

qplot(theta.seq, beta0101, geom = 'line') +
    geom_line(aes(y = beta0101.10.posterior), color = 'red')

N10.0101.plot <- qplot(theta.seq, beta0101, geom = 'line') +
    geom_line(aes(y = beta0101.10.posterior), color = 'red')

N1000.0101.plot <- qplot(theta.seq, beta0101, geom = 'line') +
    geom_line(aes(y = beta0101.10.posterior), color = 'red')

N10.0505.plot <- qplot(theta.seq, beta0505, geom = 'line') +
    geom_line(aes(y = beta0505.10.posterior), color = 'red')

N1000.0505.plot <- qplot(theta.seq, beta0505, geom = 'line') +
    geom_line(aes(y = beta0505.1000.posterior), color = 'red')

grid.arrange(N10.0101.plot, N1000.0101.plot, N10.0505.plot, N1000.0505.plot, nrow = 2)

source("wsexercise.2.R")
N10.0101.plot <- qplot(theta.seq, beta0101, geom = 'line') +
    geom_line(aes(y = beta0101.10.posterior), color = 'red')

N1000.0101.plot <- qplot(theta.seq, beta0101, geom = 'line') +
    geom_line(aes(y = beta0101.10.posterior), color = 'red')

N10.1010.plot <- qplot(theta.seq, beta1010, geom = 'line') +
    geom_line(aes(y = beta1010.10.posterior), color = 'red')

N1000.1010.plot <- qplot(theta.seq, beta1010, geom = 'line') +
    geom_line(aes(y = beta1010.1000.posterior), color = 'red')

grid.arrange(N10.0101.plot, N1000.0101.plot, N10.1010.plot, N1000.1010.plot, nrow = 2)

grid.arrange(N10.0101.plot, N1000.0101.plot, N10.1010.plot, N1000.1010.plot, nrow = 2) 

    geom_line(aes(y = beta0101.10.posterior), color = 'red')

N1000.0101.plot <- qplot(theta.seq, beta0101, geom = 'line') +
    geom_line(aes(y = beta0101.10.posterior), color = 'red')

N10.1010.plot <- qplot(theta.seq, beta1010, geom = 'line') +
    geom_line(aes(y = beta1010.10.posterior), color = 'red')

N1000.1010.plot <- qplot(theta.seq, beta1010, geom = 'line') +
    geom_line(aes(y = beta1010.1000.posterior), color = 'red')

grid.arrange(N10.0101.plot, N1000.0101.plot, N10.1010.plot, N1000.1010.plot, nrow = 2)

N10.0101.plot <- qplot(theta.seq, beta0101, geom = 'line') +
    geom_line(aes(y = beta0101.10.posterior), color = 'red')

N1000.0101.plot <- qplot(theta.seq, beta0101, geom = 'line') +
    geom_line(aes(y = beta0101.1000.posterior), color = 'red')

N10.1010.plot <- qplot(theta.seq, beta1010, geom = 'line') +
    geom_line(aes(y = beta1010.10.posterior), color = 'red')

N1000.1010.plot <- qplot(theta.seq, beta1010, geom = 'line') +
    geom_line(aes(y = beta1010.1000.posterior), color = 'red')

grid.arrange(N10.0101.plot, N1000.0101.plot, N10.1010.plot, N1000.1010.plot, nrow = 2)

grid.arrange(N10.0101.plot, N1000.0101.plot, N10.1010.plot, N1000.1010.plot, nrow = 2)
source("wsexercise.2.R")
rm(list = ls())
source("wsexercise.3.R")
qplot(theta.seq, posterior.numerical, geom = 'line') + geom_line(aes(y = posterior.analytic), color = 'red')

biased.prior <- ifelse(theta.seq < 0.25, theta.seq - 0.25, 0.25 - theta.seq)
qplot(theta.seq, biased.prior, geom = 'line')
biased.prior <- 0.25 + ifelse(theta.seq < 0.25, theta.seq - 0.25, 0.25 - theta.seq)
qplot(theta.seq, biased.prior, geom = 'line')
biased.prior <- pmax(0, 0.25 + ifelse(theta.seq < 0.25, theta.seq - 0.25, 0.25 - theta.seq))
qplot(theta.seq, biased.prior, geom = 'line')



biased.prior <- pmax(0, 0.25 + ifelse(theta.seq < 0.25, theta.seq - 0.25, 0.25 - theta.seq))
biased.prior <- biased.prior + rev(biased.prior)
biased.prior <- biased.prior / sum(biased.prior * (theta.seq[2] - theta.seq[1]))

qplot(theta.seq, biased.prior, geom = 'line')
biased.prior <- pmax(0, 0.25 + ifelse(theta.seq < 0.25, theta.seq - 0.25, 0.25 - theta.seq))
biased.prior <- biased.prior + rev(biased.prior)

qplot(theta.seq, biased.prior, geom = 'line')

diff(theta.seq)
sum(biased.prior * theta.seq)
sum(biased.prior * 0.001)
biased.prior <- pmax(0, 0.25 + ifelse(theta.seq < 0.25, theta.seq - 0.25, 0.25 - theta.seq))
biased.prior <- biased.prior + rev(biased.prior)
biased.prior <- biased.prior / sum(biased.prior * (theta.seq[2] - theta.seq[1]))

qplot(theta.seq, biased.prior, geom = 'line')

biased.posterior <- calculate.posterior.density(biased.prior, cointoss10, theta.seq)
qplot(theta.seq, biased.prior, geom = 'line') + geom_line(aes(y = biased.posterior), color = 'red')

biased.prior.2     <- 0.5 * (dbeta(theta.seq, 250, 750) + dbeta(theta.seq, 750, 250))
qplot(theta.seq, biased.prior.2, geom = 'line')

biased.posterior.2 <- calculate.posterior.density(biased.prior, cointoss10, theta.seq)
qplot(theta.seq, biased.prior, geom = 'line') + geom_line(aes(y = biased.posterior), color = 'red')

biased.posterior.2 <- calculate.posterior.density(biased.prior, cointoss10, theta.seq)
qplot(theta.seq, biased.prior.2, geom = 'line') + geom_line(aes(y = biased.posterior.2), color = 'red')

biased.posterior.2 <- calculate.posterior.density(biased.prior.2, cointoss10, theta.seq)
qplot(theta.seq, biased.prior.2, geom = 'line') + geom_line(aes(y = biased.posterior.2), color = 'red')

biased.prior.2     <- 0.5 * (dbeta(theta.seq, 25, 75) + dbeta(theta.seq, 75, 25))
qplot(theta.seq, biased.prior.2, geom = 'line')

biased.posterior.2 <- calculate.posterior.density(biased.prior.2, cointoss10, theta.seq)
qplot(theta.seq, biased.prior.2, geom = 'line') + geom_line(aes(y = biased.posterior.2), color = 'red')

biased.prior.3     <- 0.5 * (dbeta(theta.seq, 250, 750) + dbeta(theta.seq, 750, 250))
qplot(theta.seq, biased.prior.3, geom = 'line')

biased.posterior.3 <- calculate.posterior.density(biased.prior.3, cointoss10, theta.seq)
qplot(theta.seq, biased.prior.3, geom = 'line') + geom_line(aes(y = biased.posterior.3), color = 'red')

d0 <- theta.seq[2] - theta.seq[1]

part.1 <- pmax(0, 0.25 + ifelse(theta.seq <= 0.25, theta.seq - 0.25, 0.25 - theta.seq))
part.2 <- rev(part.one)
part.3 <- pmax(0, 0.50 + ifelse(theta.seq <= 0.50, theta.seq - 0.50, 0.50 - theta.seq))

threeposs.prior <- part.1 + part.2 + part.3
threeposs.prior <- threeposs.prior / sum(threeposs.prior * d0)

qplot(theta.seq, threeposs.prior, geom = 'line')

d0 <- theta.seq[2] - theta.seq[1]

part.1 <- pmax(0, 0.25 + ifelse(theta.seq <= 0.25, theta.seq - 0.25, 0.25 - theta.seq))
part.2 <- rev(part.one)
part.3 <- pmax(0, 0.50 + ifelse(theta.seq <= 0.50, theta.seq - 0.50, 0.50 - theta.seq))

d0 <- theta.seq[2] - theta.seq[1]

part.1 <- pmax(0, 0.25 + ifelse(theta.seq <= 0.25, theta.seq - 0.25, 0.25 - theta.seq))
part.2 <- rev(part.1)
part.3 <- pmax(0, 0.50 + ifelse(theta.seq <= 0.50, theta.seq - 0.50, 0.50 - theta.seq))

threeposs.prior <- part.1 + part.2 + part.3
threeposs.prior <- threeposs.prior / sum(threeposs.prior * d0)

qplot(theta.seq, threeposs.prior, geom = 'line')

threeposs.posterior <- calculate.posterior.density(threeposs.prior, cointoss10, theta.seq)
qplot(theta.seq, threeposs.prior, geom = 'line') + geom_line(aes(y = threeposs.posterior), color = 'red')

source("lib.R")
lsos()
source("wsexercise.4.R")
source("wsexercise.4.R")
hier.posterior
str(hier.posterior)
hier.posterior[1:4, 1:10]
source("wsexercise.4.R")
hier.posterior[1:4, 1:10]
hier.posterior[!is.na(hier.posterior)]
hier.posterior[is.na(hier.posterior)]
qplot(mu.seq, mu.prior, geom = 'line')
source("wsexercise.4.R")
qplot(mu.seq, mu.prior, geom = 'line')
hier.posterior
qplot(hier.posterior, geom = 'density2d')
melt(hier.posterior)
qplot(theta.seq[Var1], mu.seq[Var2], data = melt(hier.posterior), geom = 'density2d')
source("wsexercise.4.R")
qplot(theta.seq[Var1], mu.seq[Var2], data = melt(hier.posterior), geom = 'density2d')
q()
y
lsos()
rm(list = ls())
source("wsexercise.4.R")
str(hier.posterior)
melt(hier.posterior)
qplot(Var1, Var2, value, data = melt(hier.posterior), geom = 'density2d')
melt(hier.posterior)
data.table(melt(hier.posterior))
qplot(Var1, Var2, value, data = melt(hier.posterior), geom = 'density2d')
qplot(Var1, Var2, value, data = data.table(melt(hier.posterior)), geom = 'density2d')
data.table(melt(hier.posterior))[is.na(value)]
data.table(melt(hier.posterior))[is.na(Var1)]
geom_density2d
?geom_density2d
qplot(Var1, Var2, geom = melt(hier.posterior), colour = value)
qplot(Var1, Var2, geom = melt(hier.posterior), geom = 'point', colour = value)
qplot(Var1, Var2, data = melt(hier.posterior), geom = 'point', colour = value)
qplot(Var1, Var2, data = melt(hier.posterior), geom = 'point', colour = value, size = I(0.1), alpha = I(0.1))
qplot(Var1, Var2, data = melt(hier.posterior), geom = 'point', colour = value, size = I(0.3), alpha = I(0.1))
qplot(Var1, Var2, data = melt(hier.posterior), geom = 'point', colour = value, size = I(0.3), alpha = I(0.5))
qplot(Var1, Var2, data = melt(hier.posterior), geom = 'point', colour = value, size = I(0.3))
qplot(Var1, Var2, data = melt(hier.posterior), geom = 'point', colour = value, alpha = I(0.3))
qplot(theta.seq[Var1], mu.seq[Var2], data = melt(hier.posterior), geom = 'point', colour = value, alpha = I(0.3))
qplot(theta.seq[Var1], mu.seq[Var2], value, data = melt(hier.posterior), geom = 'contour')
qplot(theta.seq[Var1], mu.seq[Var2], value, data = melt(hier.posterior), geom = 'contour2d')
geom_contour
?geom_contour
ggplot(melt(hier.posterior), aes(x = Var1, y = Var2, z = value)) + geom_contour()
qplot(x = theta.seq[Var1], y = mu.seq[Var2], z = value, data = melt(hier.posterior), geom = 'contour')
qplot(x = theta.seq[Var1], y = mu.seq[Var2], z = value, data = melt(hier.posterior), geom = 'contour', xlim = c(0, 1))
qplot(x = theta.seq[Var1], y = mu.seq[Var2], z = value, data = melt(hier.posterior), geom = 'contour', xlim = c(0, 1), ylim = c(0, 1))
source("wsexercise.4.R")
qplot(x = theta.seq[Var1], y = mu.seq[Var2], z = value, data = melt(hier.posterior), geom = 'contour', xlim = c(0, 1), ylim = c(0, 1))
qplot(x = theta.seq[Var1], y = mu.seq[Var2], z = value, data = melt(hier.posterior), geom = 'contour'
    ,xlim = c(0, 1), ylim = c(0, 1), xlab = expression(theta), ylab = expression(mu))

d0  <- 0.005
dmu <- 0.005

theta.seq <- seq(0 + d0,  1 - d0, by = d0)
mu.seq    <- seq(0 + dmu, 1 - dmu, by = dmu)

mu.prior  <- dbeta(mu.seq, 2, 2)
K         <- 100


hier.posterior.100 <- calculate.hierarchical.posterior(cointoss10, mu.seq, theta.seq, mu.prior, K)

qplot(x = theta.seq[Var1], y = mu.seq[Var2], z = value, data = melt(hier.posterior.100), geom = 'contour'
    ,xlim = c(0, 1), ylim = c(0, 1), xlab = expression(theta), ylab = expression(mu))



lsos()
source("wsexercise.4.R")
source("wsexercise.4.R")
lsos()
rm(list = ls())
q()
y
source("wsexercise.5.R")
lsos()
cointoss10
rm(list = ls())
source("wsexercise.5.R")
source("wsexercise.5.R")
source("wsexercise.5.R")
source("wsexercise.5.R")
source("wsexercise.5.R")
coin.stanmodel <- stan_model(stan.file, verbose = TRUE)

coin.stanfit <- sampling(coin.stanmodel
                        ,data      = stan.data.lst
                        ,algorithm = "NUTS"
                        ,warmup    = warmup.count
                        ,iter      = warmup.count + sample.count
                        ,chains    = chain.count
                        ,verbose   = TRUE
                         )

traceplot(coin.stanfit)
traceplot(coin.stanfit, inc_warmup = FALSE)
traceplot(coin.stanfit, inc_warmup = TRUE)
extract(coin.stanfit)$theta
qplot(extract(coin.stanfit)$theta, geom = 'density', xlim = c(0, 1))
qplot(extract(coin.stanfit)$theta, geom = 'density', xlim = c(0, 1)) + geom_line(aes(x = seq(0, 1, by = 0.001), y = dbeta(seq(0, 1, by = 0.001), 2, 2)), color = 'red')
theta.seq <- seq(0, 1, by = 0.001)
H.10.count <- sum(cointoss10)
T.10.count <- length(cointoss10) - H.10.count

beta.prior.0202 <- dbeta(theta.seq, 2, 2)
beta.posterior  <- dbeta(theta.seq, 2 + H.10.count, 2 + T.10.count)


qplot(extract(coin.stanfit)$theta, geom = 'density') +
    geom_line(aes(x = theta.seq, y = beta.prior.0202), colour = 'red') +
    geom_line(aes(x = theta.seq, y = beta.posterior),  colour = 'blue')
qplot(extract(coin.stanfit)$theta, geom = 'density') +
    geom_line(aes(x = theta.seq, y = beta.prior.0202), colour = 'red') +
    geom_line(aes(x = theta.seq, y = beta.posterior),  colour = 'blue') +
    xlab(expression(theta))

stan.file <- 'singlemint_singlecoin_flexible.stan'

warmup.count <- 250
sample.count <- 1000
chain.count  <- 8

stan.data.lst <- list(y      = cointoss10
                     ,N      = length(cointoss10)
                     ,priorA = 5
                     ,priorB = 5
                      )

coin.flex.stanmodel <- stan_model(stan.file, verbose = TRUE)

coin.flex.stanfit <- sampling(coin.stanmodel
                             ,data      = stan.data.lst
                             ,algorithm = "NUTS"
                             ,warmup    = warmup.count
                             ,iter      = warmup.count + sample.count
                             ,chains    = chain.count
                             ,verbose   = TRUE
                              )

stan.data.lst
beta.prior.0505 <- dbeta(theta.seq, 5, 5)
beta.posterior  <- dbeta(theta.seq, 5 + H.10.count, 5 + T.10.count)


qplot(extract(coin.stanfit)$theta, geom = 'density') +
    geom_line(aes(x = theta.seq, y = beta.prior.0505), colour = 'red') +
    geom_line(aes(x = theta.seq, y = beta.posterior),  colour = 'blue') +
    xlab(expression(theta))


                             ,data      = stan.data.lst
                             ,algorithm = "NUTS"
                             ,warmup    = warmup.count
                             ,iter      = warmup.count + sample.count
                             ,chains    = chain.count
                             ,verbose   = TRUE
                              )

beta.prior.0505 <- dbeta(theta.seq, 5, 5)
beta.posterior  <- dbeta(theta.seq, 5 + H.10.count, 5 + T.10.count)


qplot(extract(coin.stanfit)$theta, geom = 'density') +
    geom_line(aes(x = theta.seq, y = beta.prior.0505), colour = 'red') +
    geom_line(aes(x = theta.seq, y = beta.posterior),  colour = 'blue') +
    xlab(expression(theta))

tracetraceplot(coin.stanfit)

traceplot(coin.stanfit)

?traceplot
library(knitr); knit2pdf("wsbda201603_worksheet.Rnw")
library(knitr); knit2pdf("wsbda201603_worksheet.Rnw")
q(0
q()
y
source("wsexercise.1.R", echo = TRUE)
false.alarm.seq <- seq(0, 0.1, by = 0.0005)

infected.prob <- sapply(false.alarm.seq, function(iter.fa) {
    data.dt <- generate.disease.test.data(n           = 1000000
                                         ,prior.prob  = 0.001
                                         ,hit.rate    = 0.99
                                         ,false.alarm = iter.fa)

    calculate.disease.test.probabilities(data.dt)[infected == 1, prop]
})

qplot(false.alarm.seq, infected.prob, geom = 'line')

source("lib.R")


#####
##### Exercise 1.1
#####

diseasedata.dt <- generate.disease.test.data(n           = 100000
                                            ,prior.prob  = 0.001
                                            ,hit.rate    = 0.99
                                            ,false.alarm = 0.05)


calculate.disease.test.probabilities(diseasedata.dt)



infected.prob <- sapply(false.alarm.seq, function(iter.fa) {
    data.dt <- generate.disease.test.data(n           = 1000000
                                         ,prior.prob  = 0.001
                                         ,hit.rate    = 0.99
                                         ,false.alarm = iter.fa)

    calculate.disease.test.probabilities(data.dt)[infected == 1, prop]
})

qplot(false.alarm.seq, infected.prob, geom = 'line')

false.alarm.seq <- seq(0, 0.1, by = 0.0005)

infected.prob <- sapply(false.alarm.seq, function(iter.fa) {
    data.dt <- generate.disease.test.data(n           = 100000
                                         ,prior.prob  = 0.001
                                         ,hit.rate    = 0.99
                                         ,false.alarm = iter.fa)

    calculate.disease.test.probabilities(data.dt)[infected == 1, prop]
})

qplot(false.alarm.seq, infected.prob, geom = 'line')

infected.prob <- sapply(false.alarm.seq, function(iter.fa) {
    data.dt <- generate.disease.test.data(n           = 1000000
                                         ,prior.prob  = 0.001
                                         ,hit.rate    = 0.99
                                         ,false.alarm = iter.fa)

    calculate.disease.test.probabilities(data.dt)[infected == 1, prop]
})

qplot(false.alarm.seq, infected.prob, geom = 'line')



infected.prob <- sapply(false.alarm.seq, function(iter.fa) {
    data.dt <- generate.disease.test.data(n           = 100000
                                         ,prior.prob  = 0.001
                                         ,hit.rate    = 0.99
                                         ,false.alarm = iter.fa)

    calculate.disease.test.probabilities(data.dt)[infected == 1, prop]
})

qplot(false.alarm.seq, infected.prob, geom = 'line')

getwd()
q()
y
