\documentclass[10pt]{article}

\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{fullpage}


\newcounter{wssection}
\newcounter{wsexercise}[wssection]


\newcommand{\worksheetsection}[1]{
  \vspace{10mm}
  \stepcounter{wssection}
  \noindent \Large \textbf{\thewssection. #1} \normalsize
  \vspace{3mm}
}


\newcommand{\worksheetexercise}{
  \stepcounter{wsexercise}
  \vspace{5mm} \noindent \textbf{Exercise \thewssection.\thewsexercise \;}
}


\title{Dublin R Workshop on Linear Dynamical Systems}
\author{Mick Cooney\\mickcooney@gmail.com}
\date{Oct 20, 2015}

\begin{document}

\maketitle

<<<init, echo=FALSE, cache=FALSE, results='hide', warning=FALSE, message=FALSE>>=
opts_knit$set(root.dir = ".");

opts_chunk$set(fig.path = './');
opts_chunk$set(fig.align = 'center');
opts_chunk$set(out.width  = '18cm');
opts_chunk$set(out.height = '10cm');

opts_chunk$set(size = 'scriptsize');


require(data.table);
require(ggplot2);
@



\worksheetsection{Introduction}


\worksheetsection{Problem: A Simple Power Control Algorithm for a Wireless Network}

\noindent
We consider a network of $n$ transmitter/receiver pairs. Transmitter
$i$ transmits at power level $p_i$ (which is positive). The path gain
from transmitter $j$ to receiver $i$ is $G_{ij}$ (which are all
nonnegative, and $G_{ii}$ are positive).

\vspace{3mm} \noindent
The signal power at receiver $i$ is given by $s_i = G_{ii} p_i$. The
noise plus interference power at receiver $i$ is given by

\[ q_i = \sigma + \sum_{j \neq i} G_{ij} p_j \]

\noindent
where $\sigma > 0$ is the self-noise power of the receivers (assumed
to be the same for all receivers). The
\emph{signal to interference plus noise ratio} (SINR) at receiver $i$
is defined as $S_i = \frac{s_i}{q_i}$.

\vspace{3mm} \noindent
For signal reception to occur, the SINR must exceed
some threshold value $\gamma$ (often in the range 3 -- 10). Various
\emph{power control algorithms} are used to adjust the powers $p_i$ to
ensure that $S_i \geq \gamma$ (so that each receiver can receive the
signal transmitted by its associated transmitter).

\vspace{3mm} \noindent
In this problem, we consider a simple power control update algorithm.

\vspace{3mm} \noindent
The powers are all updated synchronously at a fixed time interval,
denoted by $t = 0,1,2,....$ Thus the quantities $p$, $q$, and $S$ are
discrete-time signals, so for example $p_3 (5)$ denotes the transmit
power of transmitter 3 at time epoch $t = 5$.

\vspace{3mm} \noindent
What we would like is

\[ S_i (t) = \frac{s_i(t)}{q_i (t)} = \alpha \gamma, \]

\noindent
where $\alpha > 1$ is an SINR safety margin (of, for example, one or
two dB).  Note that increasing $p_i (t)$ (power of the $i$-th transmitter)
increases $S_i$ but decreases all other $S_j$.

\vspace{3mm} \noindent
A very simple power update algorithm is given by

\begin{equation}
\label{eqn:power_update_algo}
  p_i(t+1) = p_i(t) \left(\frac{\alpha \gamma}{S_i(t)}\right).
\end{equation}

\noindent
This scales the power at the next time step to be the power that would
achieve $S_i = \alpha \gamma$, if the interference plus noise term were
to stay the same. But unfortunately, changing the transmit powers also
changes the interference powers, so it’s not that simple!

\vspace{3mm} \noindent
Finally, we get to the problem:

\vspace{3mm} \noindent
(a) Show that the power control algorithm (\ref{eqn:power_update_algo})
can be expressed as a linear dynamical system with constant input,
i.e., in the form $p(t+1) = Ap(t) + b$, where $A \in R^{n×n}$ and
$b \in R^n$ are constant. Describe $A$ and $b$ explicitly in terms of
$\sigma$, $\gamma$, $\alpha$ and the components of $G$.

\vspace{3mm} \noindent
(b) Simulation. Use R to simulate the power control algorithm
(\ref{eqn:power_update_algo}), starting from various initial (positive)
power levels. Use the problem data:

\begin{equation}
  G = \begin{bmatrix}
        1.0 & 0.2 & 0.1 \\
        0.1 & 2.0 & 0.1 \\
        0.3 & 0.1 & 3.0
      \end{bmatrix}, \;\;
      \gamma = 3, \;\; \alpha = 1.2, \;\; \sigma = 0.01.
\end{equation}

\noindent
Plot $S_i$ and $p$ as a function of $t$, and compare it to the target
value $\alpha \gamma$. Repeat for $\gamma = 5$. Comment briefly on
what you observe.

\vspace{3mm} \noindent
Comment: You'll soon understand what you see.

\vspace{3mm} \vspace{3mm} \noindent
\textbf{\emph{SOLUTION FOR WORKSHOP:}}

\noindent
We can manipulate the definitions to get some sense of the update rule:

\begin{eqnarray*}
  p_i(t+1) &=& p_i(t) \left(\frac{\alpha \gamma}{S_i(t)}\right)\\
           &=& \frac{\alpha \gamma p_i(t) q_i(t)}{s_i(t)}\\
           &=& \frac{\alpha \gamma p_i(t) \left[ \sigma + \sum_{j \neq i} G_{ij} p_j(t) \right]}{G_{ii} p_i(t)}\\
           &=& \frac{\alpha \gamma \left[ \sigma + \sum_{j \neq i} G_{ij} p_j(t) \right]}{G_{ii}}
\end{eqnarray*}

\vspace{3mm} \noindent
In matrix form:

\begin{equation*}
\renewcommand\arraystretch{1.5}
\begin{bmatrix}
  p_1(t+1)\\
  p_2(t+1)\\
  p_3(t+1)
\end{bmatrix}
  =
\begin{bmatrix}
0                                   & \frac{\alpha \gamma G_{12}}{G_{11}} & \frac{\alpha \gamma G_{13}}{G_{11}}\\
\frac{\alpha \gamma G_{21}}{G_{22}} & 0                                   & \frac{\alpha \gamma G_{23}}{G_{22}}\\
\frac{\alpha \gamma G_{31}}{G_{33}} & \frac{\alpha \gamma G_{32}}{G_{33}} & 0
\end{bmatrix}
\begin{bmatrix}
  p_1(t)\\
  p_2(t)\\
  p_3(t)
\end{bmatrix}
+
\begin{bmatrix}
\frac{\alpha \gamma \sigma}{G_{11}}\\
\frac{\alpha \gamma \sigma}{G_{22}}\\
\frac{\alpha \gamma \sigma}{G_{33}}
\end{bmatrix}
\end{equation*}

\vspace{3mm} \noindent
So with the substitutions for $A$ and $b$ we get

\begin{equation*}
  p_i(t+1) = A p(t) + b
\end{equation*}




<<sec1_setup_data, echo=TRUE, cache=FALSE, results='true', warning=FALSE, message=FALSE>>=
G <- matrix(c(1.0, 0.2, 0.2,
              0.1, 2.0, 0.4,
              0.3, 0.1, 3.0), ncol = 3, byrow = TRUE);

gamma <- 3.0;
alpha <- 1.2;
sigma <- 0.01;
@



\worksheetexercise Using the basic set up described in the question,
plot the SINR and power output over time

\worksheetexercise Create a function that allows you to produce the
data for the plots as a function

\worksheetexercise Using the same setup but different initialisations,
check what happens for different starting power initialisations.

\worksheetexercise Redo the previous work using $\gamma = 5$.





\end{document}
