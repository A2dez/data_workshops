\documentclass[8pt]{beamer}

\makeatletter
\g@addto@macro\@verbatim\tiny
\makeatother

\usepackage{graphicx}
\usepackage{eurosym}
\usepackage{hyperref}



\usetheme[compress]{Berlin}


\title{Bayesian Modelling of Loss Curves in Insurance}
\author{Mick Cooney\\ michael.cooney@applied.ai}
\date{15 April 2016}

<<setoptions, include=TRUE, echo=FALSE, cache=FALSE, results='hide'>>=
options(width = 100)

opts_knit$set(root.dir = ".")

opts_chunk$set(fig.path = './')
opts_chunk$set(fig.align = 'center')
opts_chunk$set(out.width  = '11cm')
opts_chunk$set(out.height =  '7cm')

opts_chunk$set(size = 'scriptsize')

set.seed(4242) # Trying a different seed as some of the samplers fail with 42
@

<<init, echo=FALSE, cache=FALSE, results='hide', warning=FALSE, message=FALSE>>=
dev_mode(TRUE)

library(ggplot2)
library(data.table)
library(scales)
library(gridExtra)

library(ChainLadder)

library(rstan)
@

<<load_data, echo=FALSE, results='hide'>>=
ppauto_dt <- fread("data/ppauto_pos.csv")
medmal_dt <- fread("data/medmal_pos.csv")
prodliab_dt <- fread("data/medmal_pos.csv")
@


\begin{document}

\begin{frame}
\titlepage
\end{frame}



%%%
%%%  Section: Introduction
%%%

\section{Introduction}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Structure of Talk}

\begin{itemize}
    \item Loss Curves
    \item Chain Ladder Modelling (package \texttt{ChainLadder})
    \item Loss Growth Modelling
    \item Expanding the Model
    \item Posterior Predictive Checks
    \item Summary
\end{itemize}
\end{frame}



%%%
%%%
%%%  Section:
%%%
%%%

\section{Loss Curves}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Loss Curves}

<<explore_ppauto, echo=TRUE, cache=FALSE, results='show', warning=FALSE, message=FALSE>>=
use_grcode <- c(43,353,388,620)

ppauto_ss_dt <- ppauto_dt[GRCODE %in% use_grcode
                        ][DevelopmentYear < 1998
                        ][, .(grcode     = GRCODE
                             ,accyear    = AccidentYear
                             ,devlag     = DevelopmentLag
                             ,premium    = EarnedPremDIR_B
                             ,cumloss    = CumPaidLoss_B
                             ,loss_ratio = CumPaidLoss_B / EarnedPremDIR_B)]


print(dcast(ppauto_ss_dt[grcode == 43]
           ,grcode + accyear + premium ~ devlag
           ,value.var = 'cumloss'),digits=3)
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{}

<<lc_ppauto_plot, echo=FALSE, results='show', out.height='7.5cm'>>=
ggplot() +
  geom_line(aes(x = devlag, y = loss_ratio, colour = as.character(accyear))
           ,data = ppauto_ss_dt
           ,size = 0.3) +
  facet_wrap(~grcode) +
  xlab('Development Time') +
  ylab('Loss Ratio') +
  ggtitle('Snapshot of Loss Curves for 10 Years of\nPrivate Passenger Auto Insurance for Single Organisation') +
  guides(colour = guide_legend(title = 'Cohort Year')) +
  expand_limits(y = c(0,1))
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{}

<<lc_prodliab_plot, echo=FALSE, results='show', out.height='7.5cm'>>=
use_grcode <- c(669,683,7854,32514)

prodliab_ss_dt <- prodliab_dt[GRCODE %in% use_grcode
                            ][DevelopmentYear < 1998
                            ][, .(grcode     = GRCODE
                                 ,accyear    = AccidentYear
                                 ,devlag     = DevelopmentLag
                                 ,premium    = EarnedPremDIR_F2
                                 ,cumloss    = CumPaidLoss_F2
                                 ,loss_ratio = CumPaidLoss_F2 / EarnedPremDIR_F2)]

ggplot() +
  geom_line(aes(x = devlag, y = loss_ratio, colour = as.character(accyear))
           ,data = prodliab_ss_dt
           ,size = 0.3) +
  facet_wrap(~grcode) +
  xlab('Development Time') +
  ylab('Loss Ratio') +
  ggtitle('Snapshot of Loss Curves for 10 Years of\nProduct Liability Insurance for Single Organisation') +
  guides(colour = guide_legend(title = 'Cohort Year')) +
  expand_limits(y = c(0,1))
@

\end{frame}


%%%
%%%
%%%  Section:
%%%
%%%

\section{Chain Ladder}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Chain Ladder}

Standard R approach is \texttt{ChainLadder}

<<chainladder_load, echo=TRUE, results='show', out.height='5cm'>>=
ppauto_mat <- as.matrix(dcast(ppauto_ss_dt[grcode == 43]
                             ,accyear ~ devlag
                             ,value.var = 'cumloss')[,-1,with=FALSE])

ppauto_triangle <- as.triangle(ppauto_mat)

plot(ppauto_triangle)
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{}

<<chainladder_mack, echo=TRUE, results='show', warning=FALSE>>=
ppauto_mack <- MackChainLadder(ppauto_triangle, est.sigma = "Mack")

ppauto_mack$f

ppauto_mack$FullTriangle
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{}

<<chainladder_mack_plot, echo=TRUE, results='show', warning=FALSE>>=
plot(ppauto_mack)
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{}

<<chainladder_mack_plotlattice, echo=TRUE, results='show', warning=FALSE>>=
plot(ppauto_mack, lattice = TRUE)
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{}

<<chainladder_mack_plotcompare, echo=FALSE, results='show', warning=FALSE, out.height='6cm'>>=
ppauto_mack_dt <- melt(ppauto_mack$FullTriangle)
setDT(ppauto_mack_dt)

ppauto_mack_dt[, label := 'ChainLadder']

ppauto_data_dt <- ppauto_dt[GRCODE == 43, .(origin = match(AccidentYear
                                                          ,unique(AccidentYear))
                                           ,dev    = DevelopmentLag
                                           ,value  = CumPaidLoss_B)]

ppauto_data_dt[, label := 'Data']

plotdata_dt <- rbind(ppauto_mack_dt, ppauto_data_dt)
plotdata_dt[, AccYear := ppauto_dt[GRCODE == 43, unique(AccidentYear)][origin] ]

ggplot(data = plotdata_dt) +
    geom_line(aes(x = dev, y = value, colour = label)) +
    scale_y_continuous(labels = dollar) +
    facet_wrap(~AccYear, scales = 'free') +
    theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
@

\end{frame}


%%%
%%%
%%%  Section:
%%%
%%%

\section{Loss Growth Modelling}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Loss Growth Modelling}

Model growth cumulative losses as function

Scale losses by premium

\begin{align*}
g(t; \; \omega, \theta) &= 1 - \exp\left( - \left(\frac{t}{\theta}\right)^\omega \right) & \text{Loglogistic Function} \\
g(t; \; \omega, \theta) &= \frac{t^\omega}{t^\omega + \theta^\omega}                     & \text{Weibull Function}
\end{align*}

<<lgm_plot, echo=FALSE, results='show', warning=FALSE, out.width='7cm', out.height='4cm'>>=
t_seq <- seq(0, 10, by = 0.01)

loglogistic_func <- function(t, omega, theta) 1 - exp(-(t/theta)^omega)
weibull_func     <- function(t, omega, theta) t^omega / (t^omega + theta^omega)

plot_dt <- rbind(data.table(t = t_seq, label = 'Loglogistic', value = loglogistic_func(t_seq, 1.5, 2.2))
                ,data.table(t = t_seq, label = 'Weibull',     value = weibull_func(t_seq, 1.5, 2.2))
                 )


ggplot(data = plot_dt) +
    geom_line(aes(x = t, y = value, colour = label)) +
    xlab(expression(t)) +
    ylab(expression("Growth Factor for (" * omega * "=1.5, " * theta * "=2.2)"))
@



\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{}

Start with the Weibull model

\[
g(t; \; \omega, \theta) = \frac{t^\omega}{t^\omega + \theta^\omega}
\]

\vspace{3mm}

Treat as hierarchical model - group by Accident Year
\[
\text{Loss}_{\text{Y}, t} \sim \text{Normal}(\mu_{\text{L}, \text{Y}, t}, \sigma_{L})
\]
\noindent
where
\begin{eqnarray*}
\mu_{\text{L}, \text{Y}, t} &=& \text{LR}_{\text{Y}} \, \times \, \text{P}_{\text{Y}} \, \times \, g(t; \, \omega, \theta) \\
\sigma_{\text{L}} &=& \text{P}_{\text{Y}} \, \times \, \sigma \\
\text{LR}_{\text{Y}} &\sim& \text{Lognormal}(\mu_{\text{LR}}, \sigma_{\text{LR}})
\end{eqnarray*}

\vspace{3mm}

Normal prior for $\mu_{\text{LR}}$. Lognormal prior for $\omega$,
$\theta$, $\sigma_{\text{LR}}$, $\sigma$.


\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{}

<<lgm_stan_single_p1, echo=FALSE, results='show', comment="">>=
stantext <- readLines("losscurves_single.stan")

cat(stantext[1:35], sep = "\n")
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{}

<<lgm_stan_single_p2, echo=FALSE, results='show', comment="">>=
cat(stantext[37:64], sep = "\n")
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{}

<<lgm_stan_single_p3, echo=FALSE, results='show', comment="">>=
cat(stantext[66:80], sep = "\n")
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Stan Output}

<<lgm_stan_1_run, echo=FALSE, results='hide', warning=FALSE, message=FALSE>>=
ss_dt <- ppauto_ss_dt[grcode == 43]

cohort_dt <- ss_dt[, .(maxtime = max(devlag), premium = unique(premium)), by = accyear]
cohort_dt[, cohort_id := .I]

lst_standata <- list(growthmodel_id = 1   # Use weibull model
                    ,n_data         = ss_dt[, .N]
                    ,n_time         = ss_dt[, length(unique(devlag))]
                    ,n_cohort       = cohort_dt[, .N]
                    ,cohort_id      = match(ss_dt$accyear, cohort_dt$accyear)
                    ,t_value        = ss_dt[, sort(unique(devlag))]
                    ,t_idx          = ss_dt[, match(devlag, sort(unique(devlag)))]
                    ,premium        = cohort_dt$premium
                    ,loss           = ss_dt$cumloss
                    ,cohort_maxtime = cohort_dt$maxtime
                    )

lgm_1_stanfit <- stan(file    = 'losscurves_single.stan'
                     ,data    = lst_standata
                     ,iter    = 500
                     ,chains  = 8
                     ,verbose = TRUE
                     )
@

<<lgm_stan_1_traceplots_p1, echo=FALSE, results='show', out.height='6cm'>>=
traceplot(lgm_1_stanfit, par = c('omega', 'theta', 'LR')) +
    theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{}

<<lgm_stan_1_traceplots_p2, echo=FALSE, results='show', out.height='6cm'>>=
traceplot(lgm_1_stanfit, par = c('gf','loss_sd')) +
    theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{}

Check simple diagnostics:

<<lgm_stan_1_diagnostics, echo=FALSE, results='show', out.height='6cm'>>=
# Plot of convergence statistics
lgm_1_draws   <- extract(lgm_1_stanfit, permuted = FALSE, inc_warmup = TRUE)
lgm_1_monitor <- as.data.frame(monitor(lgm_1_draws
                                      ,probs = c(0.025, 0.1, 0.25, 0.5, 0.75, 0.9, 0.975)
                                      ,print = FALSE))
lgm_1_monitor$Parameter <- as.factor(gsub("\\[.*]", "", rownames(lgm_1_monitor)))

ggplot(lgm_1_monitor) +
    aes(x = Parameter, y = Rhat, color = Parameter) +
    geom_jitter(height = 0, width = 0.5, show.legend = FALSE) +
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
    ylab(expression(hat(italic(R))))
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{}

Check parameter values:

<<lgm_stan_1_parameters, echo=FALSE, results='show', out.height='6cm'>>=
param_root <- c("omega", "theta", "LR", "gf", "loss_sd")

use_vars <- unlist(lapply(param_root
                         ,function(iterstr) rownames(lgm_1_monitor)[grep(iterstr, rownames(lgm_1_monitor))]))

plotdata_dt <- lgm_1_monitor[use_vars, c('mean', '10%', '50%', '90%')]

setDT(plotdata_dt)
plotdata_dt[, variable := factor(use_vars, levels = use_vars)]

ggplot(plotdata_dt) +
      geom_point(aes(x = variable, y = mean)) +
      geom_errorbar(aes(x = variable, y = mean, ymin = `10%`, ymax = `90%`), width = 0) +
      expand_limits(y = 0) +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
      xlab("Parameter") +
      ylab("Value")
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]

<<lgm_stan_sanity_1988, echo=FALSE, results='show'>>=
ggplot() +
  geom_line(aes(x = Var2, y = value, group = Var1)
           ,data = melt(extract(lgm_1_stanfit)$loss_sample[,1,])
           ,alpha = 0.01) +
  geom_line(aes(x = DevelopmentLag, y = CumPaidLoss_B)
           ,data = ppauto_dt[GRCODE == 43][AccidentYear == 1988]
           ,colour = 'red') +
  geom_point(aes(x = DevelopmentLag, y = CumPaidLoss_B)
           ,data = ppauto_dt[GRCODE == 43][AccidentYear == 1988]
           ,colour = 'blue') +
  expand_limits(y = 0) +
  ggtitle("Plot of 1988 Year Loss Development Against Posterior Distribution") +
  xlab("Time") +
  ylab("Loss")
@


\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]

<<lgm_stan_sanity_1993, echo=FALSE, results='show'>>=
ggplot() +
  geom_line(aes(x = Var2, y = value, group = Var1)
           ,data = melt(extract(lgm_1_stanfit)$loss_sample[,6,])
           ,alpha = 0.01) +
  geom_line(aes(x = DevelopmentLag, y = CumPaidLoss_B)
           ,data = ppauto_dt[GRCODE == 43][AccidentYear == 1993]
           ,colour = 'red') +
  geom_point(aes(x = DevelopmentLag, y = CumPaidLoss_B)
           ,data = ppauto_dt[GRCODE == 43][AccidentYear == 1993]
           ,colour = 'blue') +
  expand_limits(y = 0) +
  ggtitle("Plot of 1993 Year Loss Development Against Posterior Distribution") +
  xlab("Time") +
  ylab("Loss")
@


\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]

<<lgm_stan_prediction_1993, echo=FALSE, results='show'>>=
plot_sanity <- ggplot() +
    geom_line(aes(x = Var2, y = value, group = Var1)
             ,data = melt(extract(lgm_1_stanfit)$loss_sample[,6,])
             ,alpha = 0.01) +
    geom_line(aes(x = DevelopmentLag, y = CumPaidLoss_B)
             ,data = ppauto_dt[GRCODE == 43][AccidentYear == 1993]
             ,colour = 'red') +
    geom_point(aes(x = DevelopmentLag, y = CumPaidLoss_B)
              ,data = ppauto_dt[GRCODE == 43][AccidentYear == 1993]
              ,colour = 'blue') +
    scale_y_continuous(labels = dollar, limits = c(0,40000)) +
    ggtitle("Plot of 1993 Year Loss Development") +
    xlab("Time") +
    ylab("Loss")

plot_predict <- ggplot() +
    geom_line(aes(x = Var2, y = value, group = Var1)
             ,data = melt(extract(lgm_1_stanfit)$loss_prediction[,6,])
             ,alpha = 0.01) +
    geom_line(aes(x = DevelopmentLag, y = CumPaidLoss_B)
             ,data = ppauto_dt[GRCODE == 43][AccidentYear == 1993]
             ,colour = 'red') +
    geom_point(aes(x = DevelopmentLag, y = CumPaidLoss_B)
              ,data = ppauto_dt[GRCODE == 43][AccidentYear == 1993]
              ,colour = 'blue') +
    scale_y_continuous(labels = dollar, limits = c(0,40000)) +
    ggtitle("Plot of 1993 Year Loss Prediction") +
    xlab("Time") +
    ylab("Loss")

grid.arrange(plot_sanity, plot_predict, ncol = 2)
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]

<<lgm_stan_prediction_1997, echo=FALSE, results='show'>>=
plot_sanity <- ggplot() +
    geom_line(aes(x = Var2, y = value, group = Var1)
             ,data = melt(extract(lgm_1_stanfit)$loss_sample[,10,])
             ,alpha = 0.01) +
    geom_line(aes(x = DevelopmentLag, y = CumPaidLoss_B)
             ,data = ppauto_dt[GRCODE == 43][AccidentYear == 1997]
             ,colour = 'red') +
    geom_point(aes(x = DevelopmentLag, y = CumPaidLoss_B)
              ,data = ppauto_dt[GRCODE == 43][AccidentYear == 1997]
              ,colour = 'blue') +
    scale_y_continuous(labels = dollar, limits = c(0,70000)) +
    ggtitle("Plot of 1997 Year Loss Development") +
    xlab("Time") +
    ylab("Loss")

plot_predict <- ggplot() +
    geom_line(aes(x = Var2, y = value, group = Var1)
             ,data = melt(extract(lgm_1_stanfit)$loss_prediction[,10,])
             ,alpha = 0.01) +
    geom_line(aes(x = DevelopmentLag, y = CumPaidLoss_B)
             ,data = ppauto_dt[GRCODE == 43][AccidentYear == 1997]
             ,colour = 'red') +
    geom_point(aes(x = DevelopmentLag, y = CumPaidLoss_B)
              ,data = ppauto_dt[GRCODE == 43][AccidentYear == 1997]
              ,colour = 'blue') +
    scale_y_continuous(labels = dollar, limits = c(0,70000)) +
    expand_limits(y = 0) +
    ggtitle("Plot of 1997 Year Loss Prediction") +
    xlab("Time") +
    ylab("Loss")

grid.arrange(plot_sanity, plot_predict, ncol = 2)
@

\end{frame}



%%%
%%%
%%%  Section:
%%%
%%%

\section{Model Iteration}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Model Iteration}

How might we expand this model?

\vspace{3mm}

Allow $\omega$ and $\theta$ to be part of the hierarchy:

\begin{eqnarray*}
\omega &\to& \omega_{\text{Y}} \\
\theta &\to& \theta_{\text{Y}}
\end{eqnarray*}

\vspace{3mm}

Each Accident Year has individual $(\omega_{\text{Y}}, \theta_{\text{Y}})$ with
\begin{eqnarray*}
\omega_{\text{Y}} &\sim& \text{Lognormal}(\mu_{\omega}, \sigma_{\omega}) \\
\theta_{\text{Y}} &\sim& \text{Lognormal}(\mu_{\theta}, \sigma_{\theta}) \\
 & & \\
\mu_{\omega}    &\sim& \text{Normal}(0, 1)\\
\sigma_{\omega} &\sim& \text{Lognormal}(-3, 0.1)\\
\mu_{\theta}    &\sim& \text{Normal}(0, 1)\\
\sigma_{\theta} &\sim& \text{Lognormal}(-3, 0.1)
\end{eqnarray*}

\end{frame}



%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Individual Parameters - $\omega$}

<<mi_stan_1_run, echo=FALSE, results='hide', error=FALSE, warning=FALSE, message=FALSE>>=
ss_dt <- ppauto_ss_dt[grcode == 43]

cohort_dt <- ss_dt[, .(maxtime = max(devlag), premium = unique(premium)), by = accyear]
cohort_dt[, cohort_id := .I]

lst_standata <- list(growthmodel_id = 0   # Use weibull rather than loglogistic
                    ,n_data         = ss_dt[, .N]
                    ,n_time         = ss_dt[, length(unique(devlag))]
                    ,n_cohort       = cohort_dt[, .N]
                    ,cohort_id      = match(ss_dt$accyear, cohort_dt$accyear)
                    ,t_value        = ss_dt[, sort(unique(devlag))]
                    ,t_idx          = ss_dt[, match(devlag, sort(unique(devlag)))]
                    ,premium        = cohort_dt$premium
                    ,loss           = ss_dt$cumloss
                    ,cohort_maxtime = cohort_dt$maxtime
                    )

mi_1_stanfit <- stan('losscurves_singlesep.stan'
                    ,data    = lst_standata
                    ,iter    = 500
                    ,chains  = 8
                    ,control = list('adapt_delta' = 0.99)
                    ,verbose = TRUE
                     )

@

<<mi_stan_1_traceplots_p1, echo=FALSE, results='show', out.height='6cm'>>=
traceplot(mi_1_stanfit, par = c('omega','mu_omega_exp','sd_omega')) +
    theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Individual Parameters - $\theta$}

<<mi_stan_1_traceplots_p2, echo=FALSE, results='show', out.height='6cm'>>=
traceplot(mi_1_stanfit, par = c('theta','mu_theta_exp','sd_theta')) +
    theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Individual Parameters - $\text{LR}$}

<<mi_stan_1_traceplots_p3, echo=FALSE, results='show', out.height='6cm'>>=
traceplot(mi_1_stanfit, par = c('LR','mu_LR_exp','sd_LR')) +
    theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Convergence Diagnostics}

<<mi_stan_1_diagostics, echo=FALSE, results='show', out.height='7cm'>>=
# Plot of convergence statistics
mi_1_draws   <- extract(mi_1_stanfit, permuted = FALSE, inc_warmup = TRUE)
mi_1_monitor <- as.data.frame(monitor(mi_1_draws
                                     ,probs = c(0.025, 0.1, 0.25, 0.5, 0.75, 0.9, 0.975)
                                     ,print = FALSE))
mi_1_monitor$Parameter <- as.factor(gsub("\\[.*]", "", rownames(mi_1_monitor)))

ggplot(mi_1_monitor) +
    aes(x = Parameter, y = Rhat, color = Parameter) +
    geom_jitter(height = 0, width = 0.5, show.legend = FALSE) +
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
    ylab(expression(hat(italic(R))))
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]

<<mi_stan_1_parameters, echo=FALSE, results='show', out.height='6cm'>>=
use_vars <- c("mu_omega_exp", "sd_omega"
             ,"mu_theta_exp", "sd_theta"
             ,"mu_LR_exp", "sd_LR"
             ,"LR[1]", "LR[2]", "LR[3]", "LR[4]", "LR[5]"
             ,"LR[6]", "LR[7]", "LR[8]", "LR[9]", "LR[10]"
             ,"loss_sd"
              )

plotdata_dt <- mi_1_monitor[use_vars, c('mean', '10%', '50%', '90%')]

setDT(plotdata_dt)
plotdata_dt[, variable := factor(use_vars, levels = use_vars)]

ggplot(plotdata_dt) +
      geom_point(aes(x = variable, y = mean)) +
      geom_errorbar(aes(x = variable, y = mean, ymin = `10%`, ymax = `90%`), width = 0) +
      expand_limits(y = 0) +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
      xlab("Parameter") +
      ylab("Value")
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Problems with the Model}

\begin{itemize}
\item Trouble with code
\item Divergent transitions --- had to raise \texttt{adapt\_delta}
\item Would not rely on output
\item Data is very sparse for later Accident Years
\item May revisit once other insurers added
\end{itemize}


\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Multiple Insurers}

Use hierarchical model for multiple insurers

\vspace{3mm}

Each insurer gets own set of loss ratios and growth curves:

\begin{eqnarray*}
\text{LR} &\to& \text{LR}_{\text{I}, \text{Y}} \\
\omega    &\to& \omega_{\text{I}} \\
\theta    &\to& \theta_{\text{I}}
\end{eqnarray*}

\vspace{3mm}

Put hierarchy on top of this

\vspace{3mm}

Start with 15 insurers

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Multiple Insurers}

<<mi_stan_2_file, echo=FALSE, results='show', comment=''>>=
stanfile <- 'losscurves_multiple.stan'

cat(readLines(stanfile)[87:116], sep = "\n")
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]

<<mi_stan_2_run, echo=FALSE, results='hide', error=FALSE, warning=FALSE, message=FALSE>>=
grcodes    <- ppauto_dt[, .(pos_prem = all(EarnedPremDIR_B > 0)), by = GRCODE][pos_prem == TRUE, GRCODE]
use_grcode <- grcodes[1:15]

multi_dt <- ppauto_dt[DevelopmentYear < 1998 &
                      GRCODE %in% use_grcode, .(grcode    = GRCODE
                                               ,accyear   = AccidentYear
                                               ,premium   = EarnedPremDIR_B
                                               ,devlag    = DevelopmentLag
                                               ,cumloss   = CumPaidLoss_B
                                               ,lossratio = CumPaidLoss_B / EarnedPremDIR_B
                                                )]

cohort_dt <- multi_dt[, .(maxtime = max(devlag), premium = unique(premium)), by = .(grcode, accyear)]
cohort_dt[, cohort_id := .I]

lst_standata <- list(growthmodel_id = 1   # Use weibull
                    ,n_data         = multi_dt[, .N]
                    ,n_time         = multi_dt[, length(unique(devlag))]
                    ,n_cohort       = cohort_dt[, length(unique(accyear))]
                    ,n_org          = cohort_dt[, length(unique(grcode))]
                    ,n_cohortdata   = cohort_dt[, .N]
                    ,cohort_id      = match(multi_dt$accyear, unique(cohort_dt$accyear))
                    ,org_id         = match(multi_dt$grcode, unique(cohort_dt$grcode))
                    ,t_value        = multi_dt[, sort(unique(devlag))]
                    ,t_idx          = multi_dt[, match(devlag, sort(unique(devlag)))]
                    ,premium        = multi_dt$premium
                    ,loss           = multi_dt$cumloss
                    ,cohort_maxtime = cohort_dt$maxtime
                    )

mi_2_stanfit <- stan(stanfile
                    ,data    = lst_standata
                    ,iter    = 500
                    ,chains  = 8
                    ,verbose = TRUE
                     )


@

<<mi_stan_2_traceplots_p1, echo=FALSE, results='show', out.height='6cm'>>=
traceplot(mi_2_stanfit, par = c('omega')) +
    theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
@


\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]

<<mi_stan_2_traceplots_p2, echo=FALSE, results='show', out.height='6cm'>>=
traceplot(mi_2_stanfit, par = c('theta')) +
    theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
@


\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]

<<mi_stan_2_diagostics, echo=FALSE, results='show', out.height='7cm'>>=
# Plot of convergence statistics
mi_2_draws   <- extract(mi_2_stanfit, permuted = FALSE, inc_warmup = TRUE)
mi_2_monitor <- as.data.frame(monitor(mi_2_draws
                                     ,probs = c(0.025, 0.1, 0.25, 0.5, 0.75, 0.9, 0.975)
                                     ,print = FALSE))
mi_2_monitor$Parameter <- as.factor(gsub("\\[.*]", "", rownames(mi_2_monitor)))

ggplot(mi_2_monitor) +
    aes(x = Parameter, y = Rhat, color = Parameter) +
    geom_jitter(height = 0, width = 0.5, show.legend = FALSE) +
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
    ylab(expression(hat(italic(R))))
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]

Huge amount of parameters, so check interesting subset

<<mi_stan_2_parameters, echo=FALSE, results='show', out.height='6cm'>>=
plotdata_dt <- mi_2_monitor[, c('mean', '10%', '50%', '90%')]

setDT(plotdata_dt)
plotdata_dt[, variable := factor(rownames(mi_2_monitor)
                                ,levels = rownames(mi_2_monitor))]

ggplot(plotdata_dt[grep("hyper|sd_LR|_exp", variable)]) +
      geom_point(aes(x = variable, y = mean)) +
      geom_errorbar(aes(x = variable, y = mean, ymin = `10%`, ymax = `90%`), width = 0) +
      expand_limits(y = 0) +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
      xlab("Parameter") +
      ylab("Value")
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Model Checking}

Promising on first pass

\vspace{3mm}

Lots of things going on

\vspace{3mm}

How do we check and understand model?

\end{frame}


%%%
%%%
%%%  Section:
%%%
%%%

\section{PPC}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Posterior Predictive Checks}
\begin{center}
\includegraphics[height=6cm]{caution_jazz_hands.jpg}
\end{center}
\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Posterior Predictive Checks}

\begin{itemize}
\item Getting more and more emphasis
\item Used to assess data aspects not modelled well
\item Use sample to generate `fake' data to compare
\item Can also be used to generate predictions from data (clunky)
\item No hard and fast rules
\item How can we check our loss curve output?
\end{itemize}

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{LR Range}

\textbf{Question:} Does model capture $\text{LR}$ range well?

\vspace{3mm}

For each sample, track min/max of $\text{LR}$

\vspace{1mm}

Compare actual min/max LR with distributions (devlag $\geq$ 8 years)

\vspace{1mm}

<<mi_stan_2_ppc, echo=FALSE, results='show', out.height='5cm'>>=
minmax_dt <- multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)][
    ,.SD[devlag == .BY$devlag, .(minlr = min(lossratio), maxlr = max(lossratio))], by = devlag]

ppc_dt <- multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)][
    devlag >= 8, .(minlr = min(lossratio)
                  ,maxlr = max(lossratio))]

min_plot <- ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_minLR)) +
    geom_line(aes(x = ppc_dt$minlr, y = c(0, 30)), colour = 'red') +
    scale_x_continuous(limits = c(0,0.4)) +
    xlab("Minimum Loss Ratio")

max_plot <- ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_maxLR)) +
    geom_line(aes(x = ppc_dt$maxlr, y = c(0, 30)), colour = 'red') +
    scale_x_continuous(limits = c(1.35,1.5)) +
    xlab("Maximum Loss Ratio")

grid.arrange(min_plot, max_plot, ncol = 2)
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{LR Range}

\begin{itemize}
\item Better than expected
\item Max/Min very sample-dependent
\item May be worth considering quantiles
\item Data a little too aggregated perhaps
\end{itemize}



\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]

\textbf{Question:} Does model capture time to final development well?

\vspace{3mm}

For each sample, observe time at which $\texttt{gf}$ exceeds $0.98$

\vspace{1mm}

Take 25\%/75\% intervals of time for each insurer, compare to data

\vspace{3mm}

<<mi_stan_2_ppc_2, echo=FALSE, results='show', out.height='5cm'>>=
median_time <- apply(extract(mi_2_stanfit)$t_098, 1, median)

maxloss_dt <- multi_dt[,.SD[devlag == max(devlag)]
                       ,by = .(grcode, accyear)
                       ][, .(grcode, accyear, totloss = cumloss)]

lagdata_dt <- merge(multi_dt, maxloss_dt, by = c("grcode", "accyear"))
lagdata_dt <- lagdata_dt[accyear <= 1990][, .(grcode, accyear, premium, devlag, cumloss, totloss, gf = cumloss / totloss)]
lagdata_dt <- lagdata_dt[, .SD[gf > 0.98], by = grcode][, .(minlag = min(devlag)), by = grcode]

ppc_dt <- data.table(t(apply(extract(mi_2_stanfit)$t_098, 2, function(x) quantile(x, probs = c(0.1, 0.5, 0.9)))))

ppc_dt    [, grcode := factor(use_grcode, levels = use_grcode)]
lagdata_dt[, grcode := factor(grcode, levels = grcode)]

ggplot() +
    geom_errorbar(aes(x = grcode, y = `50%`, ymin = `10%`, ymax = `90%`), data = ppc_dt, width = 0) +
    geom_point(aes(x = grcode, y = `50%`), data = ppc_dt) +
    geom_point(aes(x = grcode, y = minlag), data = lagdata_dt, colour = 'red') +
    xlab("GRCODE") +
    ylab("Lag Time to 0.98 Development")
@

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Further Iterations}

\begin{itemize}
\item Need better PPCs
\item Further nesting for Insurer and Accident Year
\item Look across product lines
\item Try ADVI to help with iteration
\end{itemize}

\end{frame}



%%%
%%%
%%%  Section:
%%%
%%%

\section{Summary}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Conclusions}

\begin{itemize}
\item Alternative to Chain Ladder
\item Allows interesting views into data
\item Data source used is crude
\item More work definitely required!
\end{itemize}

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Further Work}

\begin{itemize}
\item Try out ADVI on the models
\item Incorporate different $\omega$ and $\theta$
\item Generate fake data to try new approaches
\item Add hierarchy of product lines
\item Write-up and contribute as Stan Case Study
\end{itemize}

\end{frame}


%%%
%%%  New Frame
%%%

\begin{frame}[fragile]{Get In Touch}
\begin{center}
Mick Cooney

\href{mailto:michael.cooney@applied.ai}{michael.cooney@applied.ai}\\

\vspace{3mm}

Slides and code available on BitBucket:\\

\footnotesize
\url{https://www.bitbucket.org/kaybenleroll/dublin_r_workshops}
\end{center}
\end{frame}



\end{document}
