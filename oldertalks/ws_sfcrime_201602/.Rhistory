lsos()
 source("create_sim_incident_data.R")
lsos()
incident_dt
dbconnection <- dbConnect(dbDriver("PostgreSQL"), host = 'localhost', dbname = 'sfcrime', user = 'geospuser', pass = 'geospuser')

dbGetInfo(dbconnection)
dbGetInfo(dbDriver("PostgreSQL"))
lsos()
train_dt <- dbGetQuery(dbconnection, "SELECT * FROM incident_data i, category_data c WHERE i.id = c.id ORDER BY incident_ts")
setDT(train_dt)

train_dt <- dbGetQuery(dbconnection, "SELECT id FROM incident_data i WHERE i.label = 'train' ORDER BY incident_ts")
setDT(train_dt)
train_dt <- dbGetQuery(dbconnection, "SELECT id, incident_ts, label FROM incident_data i WHERE i.label = 'train' ORDER BY incident_ts")
setDT(train_dt)

train_dt
train_dt[runif(.N) < 0.2]
train_dt[runif(.N) < 0.1]
lsos()
test_dt
train_dt <- dbGetQuery(dbconnection, "SELECT id, incident_ts, label FROM incident_data i WHERE i.label = 'train' ORDER BY incident_ts")
setDT(train_dt)

test_dt <- train_dt[runif(.N) < 0.2]

test_dt
test_dt <- train_dt[runif(.N) < 0.1]
test_dt
?subset
?subset
?setdiff
setdiff(c(1,3,7), 1:10]
setdiff(c(1,3,7), 1:10)
setdiff(1:10, c(1,3,7), )
setdiff(1:10, c(1,3,7))
subset_dt <- train_dt[runif(.N) < 0.2]

train_id <- subset_dt[runif(.N) < 0.5]
check_id <- setdiff(subset_dt$id, trainid);

subset_dt <- train_dt[runif(.N) < 0.2]

train_id <- subset_dt[runif(.N) < 0.5]
check_id <- setdiff(subset_dt$id, train_id);

source("setup_data.R")
source("setup_data.R")
lsos()
rm(list = ls())
lsos()
dbGetInfo(dbDriver("PostgreSQL"))
dbDisconnect(dbGetInfo(dbDriver("PostgreSQL"))$connectionIds[[1]])
dbDisconnect(dbGetInfo(dbDriver("PostgreSQL"))$connectionIds[[1]])
dbGetInfo(dbDriver("PostgreSQL"))
source("setup_data.R")
incident_data_dt
lsos()
dbWriteTable(dbconnection, name = 'incident_data', value = incident_dt, append = TRUE, row.names = FALSE)

dbDisconnect(dbGetInfo(dbDriver("PostgreSQL"))$connectionIds[[1]])
dbDisconnect(dbGetInfo(dbDriver("PostgreSQL"))$connectionIds[[1]])
lsos()
rm(list = ls())
gc()
lsos()
gc()
lsos()
source("setup_data.R")
dbDisconnect(dbGetInfo(dbDriver("PostgreSQL"))$connectionIds[[1]])
lsos()
dbWriteTable(dbconnection, name = 'incident_data', value = incident_dt, append = TRUE, row.names = FALSE)
dbWriteTable(dbconnection, name = 'category_data', value = category_dt, append = TRUE, row.names = FALSE)

dbconnection <- dbConnect(dbDriver("PostgreSQL"), host = 'localhost', dbname = 'sfcrime', user = 'geospuser', pass = 'geospuser')

dbWriteTable(dbconnection, name = 'incident_data', value = incident_dt, append = TRUE, row.names = FALSE)
dbWriteTable(dbconnection, name = 'category_data', value = category_dt, append = TRUE, row.names = FALSE)

lsos()
rm(train_dt, test_dt, incident_test_dt)
lsos()
dbDisconnect(dbGetInfo(dbDriver("PostgreSQL"))$connectionIds[[1]])
dbDisconnect(dbGetInfo(dbDriver("PostgreSQL"))$connectionIds[[1]])
rm(list = ls())
lsos()
gc()
dbDisconnect(dbGetInfo(dbDriver("PostgreSQL"))$connectionIds[[1]])
lsos()
dbDisconnect(dbGetInfo(dbDriver("PostgreSQL"))$connectionIds[[1]])
source("setup_data.R")
lsos()
q()
y
source("setup_data.R")
lsos()
rm(list = ls())
train_dt <- fread("data/train.csv")
test_dt  <- fread("data/test.csv")


train_dt[, c("incident_ts", "label", "id") := .(as.POSIXct(Dates), "train", sprintf("T%08d", 1:.N))]
test_dt [, c("incident_ts", "label") := .(as.POSIXct(Dates), "test")]


train_dt
train_dt[, .N, by = Category]
train_dt[, .N, by = Category][order(N)]
train_dt[, .N, by = Category][order(-N)]
train_dt[, .N, by = Category]
train_dt[, .N, by = Category][order(Category)]
str(train_dt)
train_dt[, .N, by = Category][order(Category)]
train_dt[, .N, by = Category][order(Category)][, .(Category, prop = N / sum(N))]
dcast(train_dt[, .N, by = Category][order(Category)][, .(Category, prop = N / sum(N))], . ~ Category, value.var = 'prop')
dcast(train_dt[, .N, by = Category][order(Category)][, .(Category, prop = N / sum(N))], ~ Category, value.var = 'prop')
dcast(train_dt[, .N, by = Category][order(Category)][, .(Category, prop = N / sum(N))], . ~ Category, value.var = 'prop')
test_dt
prop_dt <- dcast(train_dt[, .N, by = Category][order(Category)][, .(Category, prop = N / sum(N))], . ~ Category, value.var = 'prop')
test_dt[, .(Id)]
CJ(test_dt[, .(Id)], prop_dt)
cbind(test_dt[, .(Id)], prop_dt)
predict_dt <- cbind(test_dt[, .(Id)], prop_dt)
predict_dt
str(predict_dt)
predict_dt[, `.` := NULL]
predict_dt
write.csv(predict_dt, file = 'prediction_1.csv', row.names = TRUE)
predict_dt
write.csv(predict_dt, file = 'prediction_1.csv', row.names = FALSE)
lsos()
rm(predict_dt)
gc()
save(train_dt, test_dt, file = 'testtrain.rda', compress = 'xz')

lsos()
gc()
prop_dt <- train_dt[, .N, by = Category][, .(Category, prop = N / sum(N))]

prop_dt
prop_dt <- train_dt[, .N, by = Category][, .(Category, prop = N / sum(N))]

prop_column_dt <- dcast(prop_dt[order(Category)], . ~ Category, value.var = 'prop')
prop_column_dt[, `.` := NULL]

submit_dt <- cbind(test_dt[, .(Id)], prop_column_dt)

submit_dt
?ddirichlet
??ddirichlet
library(help = 'gtools')
gtools::ddirichlet
?gtools::ddirichlet
ddirichlet(1, c(1, 1, 1))
gtools::ddirichlet(1, c(1, 1, 1))
gtools::ddirichlet(c(1, 1, 1), c(1, 1, 1))
gtools::ddirichlet(c(2, 2, 2), c(1, 1, 1))
gtools::ddirichlet(c(2, 2, 2), c(2, 2, 2))
gtools::rdirichlet(c(1,1,1))
gtools::rdirichlet(10, c(1,1,1))
gtools::rdirichlet(1, c(1,1,1))
prop_dt <- train_dt[, .N, by = Category][, .(Category, count = N, prop = N / sum(N))]


prop_column_dt <- dcast(prop_dt[order(Category)], Count ~ Category, value.var = 'prop')
prop_column_dt[, Count := NULL]

prop_dt <- train_dt[, .N, by = Category][, .(Category, count = N, prop = N / sum(N))]


prop_column_dt <- dcast(prop_dt[order(Category)], count ~ Category, value.var = 'prop')
prop_column_dt[, count := NULL]

prop_column_dt
prop_dt
dcast(prop_dt[order(Category)], . ~ Category, value.var = 'prop')
prop_dt <- train_dt[, .N, by = Category][, .(Category, count = N, prop = N / sum(N))]


prop_column_dt <- dcast(prop_dt[order(Category)], . ~ Category, value.var = 'prop')
prop_column_dt[, `.` := NULL]


prop_column_dt
count_column_dt <- dcast(prop_dt[order(Category)], . ~ Category, value.var = 'count')
count_column_dt
prop_dt[, count]
t(prop_dt[, count])
prop_dt[order(Category), count]
count_column_dt
sample <- gtools::rdirichlet(1000, counts)
counts <- prop_dt[order(Category), count]
sample <- gtools::rdirichlet(1000, counts)
colMeans(sample)
sum(colMeans(sample))
counts    <- prop_dt[order(Category), count]
dirichlet <- rowMeans(gtools::rdirichlet(10000, counts))
dirichlet
counts    <- prop_dt[order(Category), count]

dirichlet <- rowMeans(gtools::rdirichlet(10000, counts))
counts    <- prop_dt[order(Category), count]
dirichlet <- colMeans(gtools::rdirichlet(10000, counts))
dirichlet
as.data.frame(t(dirichlet))
as.data.table(t(dirichlet))
dirichlet_dt <- as.data.table(t(dirichlet))
setnames(dirichlet_dt, prop_dt[order(Category)]$Category)
dirichlet_dt
counts    <- prop_dt[order(Category), count]
dirichlet <- colMeans(gtools::rdirichlet(10000, counts))

dirichlet_dt <- as.data.table(t(dirichlet))
setnames(dirichlet_dt, prop_dt[order(Category)]$Category)

pred2_dt <- cbind(test_dt[, .(id)], dirichlet_dt)
pred2_dt <- cbind(test_dt[, .(Id)], dirichlet_dt)
pred2_dt
write.csv(pred2_dt, file = 'pred2.csv', row.names = FALSE)
counts
counts + 1
lsos()
rm(submit_dt, pred2_dt)
gc()
gc()
lsos()
rm(sample)
dirichlet2 <- colMeans(gtools::rdirichlet(10000, counts + 10))

dirichlet2_dt <- as.data.table(t(dirichlet))
setnames(dirichlet2_dt, prop_dt[order(Category)]$Category)

dirichlet2
dirichlet
dirichlet2 <- colMeans(gtools::rdirichlet(10000, counts + 10))

dirichlet2_dt <- as.data.table(t(dirichlet2))
setnames(dirichlet2_dt, prop_dt[order(Category)]$Category)

dirichlet1_dt
dirichlet1_dt <- dirichlet_dt
rm(dirichlet_dt)
lsos()
gc()
dirichlet1_dt
dirichlet2_dt
dirichlet1_dt - dirichlet2_dt
order(dirichlet1_dt - dirichlet2_dt)
counts     <- prop_dt[order(Category), count]
dirichlet1 <- colMeans(gtools::rdirichlet(10000, counts))

dirichlet1_dt <- as.data.table(t(dirichlet1))
setnames(dirichlet1_dt, prop_dt[order(Category)]$Category)

dirichlet1
dirichlet2
dirichlet1 - dirichlet2
sort(dirichlet1 - dirichlet2)
dirichlet2 <- colMeans(gtools::rdirichlet(10000, counts + 10))

dirichlet2_dt <- as.data.table(t(dirichlet2))
setnames(dirichlet2_dt, prop_dt[order(Category)]$Category)

pred3_dt <- cbind(test_dt[, .(Id)], dirichlet2_dt)

pred3_dt
pred3_dt <- cbind(test_dt[, .(Id)], dirichlet2_dt)

write.csv(pred3_dt, file = 'prediction3.csv', row.names = FALSE)

rm(pred3_dt)

q()
y
