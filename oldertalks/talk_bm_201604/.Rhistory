library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
q()
y
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
x <- runif(30, 0, 20)
y <- 2.4 * x + 3 + rnorm(0, 2)

qplot(x, y, geom = 'line')

x <- runif(30, 0, 20)
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
rm(list = ls())
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
qplot(x1, y1, geom = 'point') + geom_line(aes(x = x1, y = y1), colour = 'red')

x1
y1
qplot(x1, y1, geom = 'point') + geom_line(aes(x = x1, y = y1), colour = 'red')
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
qplot(x1, y1, geom = 'point') + geom_line(aes(x = x1, y = y1), colour = 'red')

library(knitr); knit2pdf("talkdvggplot201603.Rnw")
lsos()
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
load("longtermvol.dt.rda")
lsos()
longtermvol.dt
qplot(date, histvol, data = longtermvol.dt[horizon == 250], geom = 'line', colour = symbol)
qplot(date, histvol, data = longtermvol.dt[horizon == 250], geom = 'line', colour = symbol) + geom_dl(aes(label = symbol), last.bumpup)
library(directlabels)
qplot(date, histvol, data = longtermvol.dt[horizon == 250], geom = 'line', colour = symbol) + geom_dl(aes(label = symbol), last.bumpup)
qplot(date, histvol, data = longtermvol.dt[horizon == 250], geom = 'line', colour = symbol) + geom_dl(aes(label = symbol), list(last.bumpup))
qplot(date, histvol, data = longtermvol.dt[horizon == 250], geom = 'line', colour = symbol) + geom_dl(aes(label = symbol, last.bumpup))
?geom_dl
qplot(date, histvol, data = longtermvol.dt[horizon == 250], geom = 'line', colour = symbol) + geom_dl(aes(label = symbol), method = last.bumpup)
qplot(date, histvol, data = longtermvol.dt[horizon == 250], geom = 'line', colour = symbol) + geom_dl(aes(label = symbol), list('last.bumpup')) +
qplot(date, histvol, data = longtermvol.dt[horizon == 250], geom = 'line', colour = symbol) + geom_dl(aes(label = symbol), list('last.bumpup'))
qplot(date, histvol, data = longtermvol.dt[horizon == 250], geom = 'line', colour = symbol) + geom_dl(aes(label = symbol), method = list('last.bumpup'))
qplot(date, histvol, data = longtermvol.dt[horizon == 250], geom = 'line', colour = symbol) + geom_dl(aes(label = symbol), method = list('last.bumpup')) + theme(legend.position = 'none')
qplot(date, histvol, data = longtermvol.dt[horizon == 250], geom = 'line', colour = symbol) + geom_dl(aes(label = symbol), method = list('last.bumpup', hjust = 1)) + theme(legend.position = 'none')
qplot(date, histvol, data = longtermvol.dt[horizon == 2500], geom = 'line', colour = symbol) + geom_dl(aes(label = symbol), method = list('last.bumpup', hjust = 1)) + theme(legend.position = 'none')
qplot(date, histvol, data = longtermvol.dt[horizon == 1250], geom = 'line', colour = symbol) + geom_dl(aes(label = symbol), method = list('last.bumpup', hjust = 1)) + theme(legend.position = 'none')
qplot(date, histvol, data = longtermvol.dt[horizon == 1250], geom = 'line', colour = symbol) + geom_dl(aes(label = symbol), method = list('last.bumpup', hjust = 0.5)) + theme(legend.position = 'none')
qplot(date, histvol, data = longtermvol.dt[horizon == 1250], geom = 'line', colour = symbol) + geom_dl(aes(label = symbol), method = list('last.bumpup', hjust = 0.1)) + theme(legend.position = 'none')
qplot(date, histvol, data = longtermvol.dt[horizon == 1250], geom = 'line', colour = symbol) + geom_dl(aes(label = symbol), method = list('last.bumpup', hjust = 0.3)) + theme(legend.position = 'none')
qplot(date, histvol, data = longtermvol.dt[horizon == 1250], geom = 'line', colour = symbol) + geom_dl(aes(label = symbol), method = list('last.bumpup', hjust = 0.5)) + theme(legend.position = 'none')
mpg
head(mpg)
str(mpg)
??tbl_df
mpg
str(mpg)
head(mpg)
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
lsos()
saveRDS(longtermvol.dt, file = 'longtermvol.dt.rds', compress = 'xz')
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
ggplot(aes(x = x, y = dens), data = plot_dt)
    + geom_line(colour = label)

ggplot(aes(x = x, y = dens), data = plot_dt) + geom_line
ggplot(aes(x = x, y = dens, colour = label), data = plot_dt) + geom_line
ggplot(aes(x = x, y = dens, colour = label), data = plot_dt) + geom_line()
ggplot(aes(x = x, y = dens, colour = label), data = plot_dt) + geom_line()
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
lsos()
saveRDS(longtermvol.dt, file = 'data/longtermvol.dt.rds', compress = 'xz')
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
readRDS
readRDS("data/longtermvol.dt.rds")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
longtermvol.dt
rm(longtermvol.dt)
lsos()
longterm_dt
ggplot(aes(x = date, y = histvol, colour = symbol), data = longterm_dt) + facet_wrap(~horizon)
ggplot(aes(x = date, y = histvol, colour = symbol), data = longterm_dt) + facet_wrap(~horizon) + geom_line()
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
load("~/Dropbox/Temp/test.lst.rda")
qplot(Var2, value, data = melt(veganeutral.port.weights.lst$weights.bootstrapped$t), geom = 'boxplot', xlab = 'Symbol', ylab = 'Portfolio Weight', main = 'Vega-Neutral Portfolio Weights') + scale_y_continuous(labels = percent, limits = c(-1, 1)) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)); 
qplot(Var2, value, data = melt(test.lst$weights.bootstrapped$t), geom = 'boxplot', xlab = 'Symbol', ylab = 'Portfolio Weight', main = 'Vega-Neutral Portfolio Weights') + scale_y_continuous(labels = percent, limits = c(-1, 1)) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)); 
test.lst$weights.bootstrapped$t
veganeutral_weights_matrix <- test.lst$weights.bootstrapped$t
rm(test.lst)
qplot(Var2, value, data = melt(veganeutral_weights_matrix), geom = 'boxplot', xlab = 'Symbol', ylab = 'Portfolio Weight', main = 'Vega-Neutral Portfolio Weights') + scale_y_continuous(labels = percent, limits = c(-1, 1)) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5));
veganeutral_weights_matrix[1:10, 1:7]
veganeutral_weights_matrix[veganeutral_weights_matrix < 1e-6] <- 0
veganeutral_weights_matrix[1:10, 1:7]
qplot(Var2, value, data = melt(veganeutral_weights_matrix), geom = 'boxplot', xlab = 'Symbol', ylab = 'Portfolio Weight', main = 'Vega-Neutral Portfolio Weights') + scale_y_continuous(labels = percent, limits = c(-1, 1)) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5));
saveRDS(veganeutral_weights_matrix, file = 'data/veganeutral_weights_matrix.rds', compress = 'xz')
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
lsos()
pv
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
gpdata_dt <- readRDS("data/gpdata_dt.rds")
gpplot_dt <- readRDS("data/gpplot_dt.rds")

gpdata_dt
gpplot_dt
pv <- ggplot() +
    geom_line(aes(x = x, y = value, group = Var1)
             ,data = gpplot_dt, size = 0.3, alpha = 0.2) +
    geom_point(aes(x, y), data = gpdata_dt, colour = 'red') +
    geom_errorbar(aes(x, ymin, ymax)
                 ,data = gpdata_dt, colour = 'red', width = 0.1) +
    xlab(expression(x)) +
    ylab(expression(f(x))) +
    ggtitle("Gaussian Process Regression Allowing for y Uncertainty")

plot(pv)
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
pv <- ggplot(aes(x = date, y = histvol, colour = symbol)
            ,data = longterm_dt) +
    facet_wrap(~horizon) +
    geom_line(size = 0.1) +
    expand_limits(y = 0) +
    xlab("Date") +
    ylab("Unconditional Volatility") +
    ggtitle("Facetted Lineplot of Volatility of DJIA Stocks")

plot(pv)
pv <- ggplot(aes(x = date, y = histvol, colour = symbol)
            ,data = longterm_dt) +
    facet_wrap(~horizon) +
    geom_line(size = 0.3) +

    expand_limits(y = 0) +
    xlab("Date") +
    ylab("Unconditional Volatility") +
    ggtitle("Facetted Lineplot of Volatility of DJIA Stocks")

plot(pv)
?geom_boxplot
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
losscurves_dt
losscurves_dt[1:3]
ggplot(aes(x = DevelopmentLag, y = CumPaidLoss, colour = AccidentYear), data = losscurves_dt) + geom_line()
ggplot(aes(x = DevelopmentLag, y = CumPaidLoss, colour = as.character(AccidentYear)), data = losscurves_dt) + geom_line()
ggplot(aes(x = DevelopmentLag, y = CumPaidLoss / EarnedPremDIR, colour = as.character(AccidentYear)), data = losscurves_dt) + geom_line()
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
pv <- ggplot(aes(x = DevelopmentLag
                ,y = CumPaidLoss / EarnedPremDIR
                ,colour = as.character(AccidentYear))
            ,data = losscurves_dt) +
    geom_line() +
    guides(colour = guide_legend(title = "Year"))

plot(pv)
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
lsos()
gc()
pv <- ggplot(aes(x = DevelopmentLag
lsos()
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
q()
y
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
fundnav_dt <- readRDS("data/fundnav.dt.rds")
fundnav_dt
qplot(date, nav, data = fundnav.dt, colour = fundlabel)
qplot(date, nav, data = fundnav_dt, colour = fundlabel)
qplot(date, nav, data = fundnav_dt, geom = 'line', colour = fundlabel)
qplot(date, nav, data = fundnav_dt, geom = 'line', colour = fundlabel, size = I(0.3))
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
?geom-dl
?geom_dl
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
pv <- ggplot() +
    geom_line(aes(x = date, y = nav, colour = fundlabel)
             ,data = fundnav_dt
             ,size = 0.3) +
    scale_y_continuous(labels = dollar) +
    theme(legend.position = 'none') +
    geom_dl(aes(label = fundlabel)
           ,method = list('last.bumpup'
                         ,hjust = 0.5)) +
    xlab("Date") +
    ylab("Fund NAV") +
    ggtitle("Fund NAVs for Equity and Equity Option Strategies")

plot(pv)
pv <- ggplot(data = fundnav_dt) +
    geom_line(aes(x = date, y = nav, colour = fundlabel)
             ,size = 0.3) +
    scale_y_continuous(labels = dollar) +
    theme(legend.position = 'none') +
    geom_dl(aes(label = fundlabel)
           ,method = list('last.bumpup'
                         ,hjust = 0.5)) +
    xlab("Date") +
    ylab("Fund NAV") +
    ggtitle("Fund NAVs for Equity and Equity Option Strategies")


    geom_line(aes(x = date, y = nav, colour = fundlabel)
             ,data = fundnav_dt
             ,size = 0.3) +
    scale_y_continuous(labels = dollar) +
    theme(legend.position = 'none') +
    geom_dl(aes(label = fundlabel)
           ,method = list('last.bumpup'
                         ,hjust = 0.5)) +
    xlab("Date") +
    ylab("Fund NAV") +
    ggtitle("Fund NAVs for Equity and Equity Option Strategies")

pv <- ggplot(data = fundnav_dt) +
    geom_line(aes(x = date, y = nav, colour = fundlabel)
             ,size = 0.3) +
    scale_y_continuous(labels = dollar) +
    theme(legend.position = 'none') +
    geom_dl(aes(label = fundlabel)
           ,method = list('last.bumpup'
                         ,hjust = 0.5)) +
    xlab("Date") +
    ylab("Fund NAV") +
    ggtitle("Fund NAVs for Equity and Equity Option Strategies")

plot(pv)
pv <- ggplot(data = fundnav_dt) +
    geom_line(aes(x = date, y = nav
                 ,colour = fundlabel)
             ,size = 0.3) +
    scale_y_continuous(labels = dollar) +
    theme(legend.position = 'none') +
    geom_dl(aes(x = date, y = nav
               ,label = fundlabel)
           ,method = list('last.bumpup'
                         ,hjust = 0.5)) +
    xlab("Date") +
    ylab("Fund NAV") +
    ggtitle("Fund NAVs for Equity and Equity Option Strategies")

plot(pv)
pv <- ggplot(data = fundnav_dt) +
    geom_line(aes(x = date, y = nav
                 ,colour = fundlabel)
             ,size = 0.3) +
    scale_y_continuous(labels = dollar) +
    theme(legend.position = 'none') +
    geom_dl(aes(x = date, y = nav
               ,label = fundlabel)
           ,method = list('last.bumpup'
                         ,hjust = -0.5)) +
    xlab("Date") +
    ylab("Fund NAV") +
    ggtitle("Fund NAVs for Equity and Equity Option Strategies")

plot(pv)
pv <- ggplot(data = fundnav_dt) +
    geom_line(aes(x = date, y = nav
                 ,colour = fundlabel)
             ,size = 0.3) +
    scale_y_continuous(labels = dollar) +
    theme(legend.position = 'none') +
    geom_dl(aes(x = date, y = nav
               ,colour = fundlabel
               ,label  = fundlabel)
           ,method = list('last.bumpup'
                         ,hjust = 1)) +
    xlab("Date") +
    ylab("Fund NAV") +
    ggtitle("Fund NAVs for Equity and Equity Option Strategies")

plot(pv)
pv <- ggplot(data = fundnav_dt) +
    geom_line(aes(x = date, y = nav
                 ,colour = fundlabel)
             ,size = 0.3) +
    scale_y_continuous(labels = dollar) +
    theme(legend.position = 'none') +
    geom_dl(aes(x = date, y = nav
               ,label  = fundlabel)
           ,method = list('last.bumpup'
                         ,hjust = 1)) +
    xlab("Date") +
    ylab("Fund NAV") +
    ggtitle("Fund NAVs for Equity and Equity Option Strategies")

plot(pv)
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
pv <- ggplot(data = fundnav_dt) +
    geom_line(aes(x = date, y = nav
                 ,colour = fundlabel)
             ,size = 0.3) +
    scale_y_continuous(labels = dollar) +
    theme(legend.position = 'none') +
    geom_dl(aes(x = date, y = nav
               ,colour = fundlabel
               ,label  = fundlabel)
           ,method = list('last.bumpup')) +
    expand_limits(y = 0)
    xlab("Date") +
    ylab("Fund NAV") +
    ggtitle("Fund NAVs for Equity and Equity Option Strategies")

pv <- ggplot(data = fundnav_dt) +
    geom_line(aes(x = date, y = nav
                 ,colour = fundlabel)
             ,size = 0.3) +
    scale_y_continuous(labels = dollar) +
    theme(legend.position = 'none') +
    geom_dl(aes(x = date, y = nav
               ,colour = fundlabel
               ,label  = fundlabel)
           ,method = list('last.bumpup')) +
    expand_limits(y = 0) +
    xlab("Date") +
    ylab("Fund NAV") +
    ggtitle("Fund NAVs for Equity and Equity Option Strategies")

plot(pv)
?expand_limits
pv <- ggplot(data = fundnav_dt) +
    geom_line(aes(x = date, y = nav
                 ,colour = fundlabel)
             ,size = 0.3) +
    scale_y_continuous(labels = dollar) +
    theme(legend.position = 'none') +
    geom_dl(aes(x = date, y = nav
               ,colour = fundlabel
               ,label  = fundlabel)
           ,method = list('last.bumpup')) +
    expand_limits(x = as.Date('2017-01-01')
                 ,y = 0) +
    xlab("Date") +
    ylab("Fund NAV") +
    ggtitle("Fund NAVs for Equity and Equity Option Strategies")

plot(pv)
pv <- ggplot(data = fundnav_dt) +
    geom_line(aes(x = date, y = nav
                 ,colour = fundlabel)
             ,size = 0.3) +
    scale_y_continuous(labels = dollar) +
    theme(legend.position = 'none') +
    geom_dl(aes(x = date, y = nav
               ,colour = fundlabel
               ,label  = fundlabel)
           ,method = list('last.bumpup')) +
    expand_limits(x = as.Date('2017-07-01')
                 ,y = 0) +
    xlab("Date") +
    ylab("Fund NAV") +
    ggtitle("Fund NAVs for Equity and Equity Option Strategies")

plot(pv)
pv <- ggplot(data = fundnav_dt) +
    geom_line(aes(x = date, y = nav
                 ,colour = fundlabel)
             ,size = 0.3) +
    scale_y_continuous(labels = dollar) +
    theme(legend.position = 'none') +
    geom_dl(aes(x = date, y = nav
               ,label  = fundlabel)
           ,method = list('last.bumpup')) +
                         ,hjust = -1)) +
    xlab("Date") +
    ylab("Fund NAV") +
    ggtitle("Fund NAVs for Equity and Equity Option Strategies")

pv <- ggplot(data = fundnav_dt) +
    geom_line(aes(x = date, y = nav
                 ,colour = fundlabel)
             ,size = 0.3) +
    scale_y_continuous(labels = dollar) +
    theme(legend.position = 'none') +
    geom_dl(aes(x = date, y = nav
               ,label  = fundlabel)
           ,method = list('last.bumpup'
                         ,hjust = -1)) +
    xlab("Date") +
    ylab("Fund NAV") +
    ggtitle("Fund NAVs for Equity and Equity Option Strategies")

plot(pv)
pv <- ggplot(data = fundnav_dt) +
    geom_line(aes(x = date, y = nav
                 ,colour = fundlabel)
             ,size = 0.3) +
    scale_y_continuous(labels = dollar) +
    theme(legend.position = 'none') +
    geom_dl(aes(x = date, y = nav
               ,label  = fundlabel)
           ,method = list('last.bumpup'
                         ,hjust = 1)) +
    xlab("Date") +
    ylab("Fund NAV") +
    ggtitle("Fund NAVs for Equity and Equity Option Strategies")

plot(pv)
pv <- ggplot(data = fundnav_dt[date >= as.Date('2007-01-01') &
                               date <= as.Date('2011-01-01')]) +
    geom_line(aes(x = date, y = nav
                 ,colour = fundlabel)
             ,size = 0.3) +
    scale_y_continuous(labels = dollar) +
    theme(legend.position = 'none') +
    geom_dl(aes(x = date, y = nav
               ,colour = fundlabel
               ,label  = fundlabel)
           ,method = list('last.bumpup')) +
    expand_limits(y = 0) +
    xlab("Date") +
    ylab("Fund NAV") +
    ggtitle("Fund NAVs for Equity and Equity Option Strategies")

plot(pv)
pv <- ggplot(data = fundnav_dt[date >= as.Date('2008-01-01') &
                               date <= as.Date('2010-01-01')]) +
    geom_line(aes(x = date, y = nav
                 ,colour = fundlabel)
             ,size = 0.3) +
    scale_y_continuous(labels = dollar) +
    theme(legend.position = 'none') +
    geom_dl(aes(x = date, y = nav
               ,colour = fundlabel
               ,label  = fundlabel)
           ,method = list('last.bumpup')) +
    expand_limits(x = as.Date('2011-01-01')
                 ,y = 0) +
    xlab("Date") +
    ylab("Fund NAV") +
    ggtitle("Fund NAVs for Equity and Equity Option Strategies")

plot(pv)
pv <- ggplot(data = fundnav_dt[date >= as.Date('2008-01-01') &
                               date <= as.Date('2010-01-01')]) +
    geom_line(aes(x = date, y = nav
                 ,colour = fundlabel)
             ,size = 0.3) +
    scale_y_continuous(labels = dollar) +
    theme(legend.position = 'none') +
    geom_dl(aes(x = date, y = nav
               ,colour = fundlabel
               ,label  = fundlabel)
           ,method = list('last.bumpup')) +
    expand_limits(x = as.Date('2010-07-01')
                 ,y = 0) +
    xlab("Date") +
    ylab("Fund NAV") +
    ggtitle("Fund NAVs for Equity and Equity Option Strategies")

plot(pv)
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
q()
y
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
q()
y
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
q()
y
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
pv <- ggplot(mtcars, aes(x = displ, y = hwy)) +
    geom_point() +
    facet_wrap(~class)

plot(pv)
head(mtcars)
mtcars
mpg
lsos()
pv <- ggplot(mtcars, aes(x = displ, y = hwy)) +
    geom_point()

plot(pv)
?ggplot
head(mtcars)
head(mpg)
?mpg
library(knitr); knit2pdf("talkdvggplot201603.Rnw")
q()
y
library(knitr)
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
ppauto_dt
ppauto_dt[, unique(GRCODE)]
ppauto_dt[GRCODE == 353]
knit2pdf("talkbm201604.Rnw")
ppauto_snapshot_dt <- ppauto_dt[GRCODE == use_grcode
                              ][DevelopmentYear < 1998
                              ][, .(grcode     = GRCODE
                                   ,accyear    = AccidentYear
                                   ,devlag     = DevelopmentLag
                                   ,premium    = EarnedPremDIR_B
                                   ,cumloss    = CumPaidLoss_B
                                   ,loss_ratio = CumPaidLoss_B / EarnedPremDIR_B)]

knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
lsos()
prodliab_dt
prodliab_dt[, unique(GRCODE)]
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
prodliab_dt
prodliab_ss_dt
prodliab_ss_dt[premium > 0, unique(GRCODE)]
prodliab_ss_dt[premium > 0, unique(grcode)]
prodliab_ss_dt[grcode == 683]
prodliab_ss_dt[grcode == 841]
prodliab_dt[, unique(GRCODE)]
prodliab_ss_dt[grcode == 1406]
prodliab_dt[, unique(GRCODE)]
prodliab_ss_dt[grcode == 7854]
prodliab_dt[grcode == 7854]
prodliab_dt[GRCODE == 7854]
prodliab_dt[, unique(GRCODE)]
prodliab_dt[GRCODE == 10019]
prodliab_dt[, unique(GRCODE)]
prodliab_dt[GRCODE == 10115]
prodliab_dt[, unique(GRCODE)]
prodliab_dt[GRCODE == 10232]
prodliab_dt[, all(EarnedPremDIR_F2 > 0), by = GRCODE]
prodliab_dt[GRCODE == 32514]
prodliab_dt[, all(EarnedPremDIR_F2 > 0), by = GRCODE]
prodliab_dt[, .(allpositive = all(EarnedPremDIR_F2 > 0)), by = GRCODE]
prodliab_dt[, .(allpositive = all(EarnedPremDIR_F2 > 0)), by = GRCODE][allpositive]
prodliab_dt[, .(allpositive = all(EarnedPremDIR_F2 > 0)), by = GRCODE][allpositive == tRUE]
prodliab_dt[, .(allpositive = all(EarnedPremDIR_F2 > 0)), by = GRCODE][allpositive == TRUE]
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
lsos()
getwd()
rm(list = ls())
getwd()
knit2pdf("talkbm201604.Rnw")
getwd()
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
as.triangle(dcast(ppauto_ss_dt[grcode == 43]
           ,grcode + accyear + premium ~ devlag
           ,value.var = 'cumloss'))
ppauto_ss_dt
as.triangle(dcast(ppauto_ss_dt[grcode == 43],grcode + accyear + premium ~ devlag,value.var = 'cumloss'))
dcast(ppauto_ss_dt[grcode == 43],grcode + accyear + premium ~ devlag,value.var = 'cumloss')
dcast(ppauto_ss_dt[grcode == 43],accyear + premium ~ devlag,value.var = 'cumloss')
dcast(ppauto_ss_dt[grcode == 43],accyear ~ devlag,value.var = 'cumloss')
as.triangle(dcast(ppauto_ss_dt[grcode == 43],accyear ~ devlag,value.var = 'cumloss'))
?as.triangle
as.triangle(as.matrix(dcast(ppauto_ss_dt[grcode == 43],accyear ~ devlag,value.var = 'cumloss')))
as.triangle(as.matrix(dcast(ppauto_ss_dt[grcode == 43],accyear ~ devlag,value.var = 'cumloss')), origin = 'accyear')
as.triangle(as.matrix(dcast(ppauto_ss_dt[grcode == 43],accyear ~ devlag,value.var = 'cumloss')))
as.triangle(ppauto_ss_dt[grcode == 43][, .(accyear, devlag, cumloss)])
ppauto_ss_dt[grcode == 43][, .(accyear, devlag, cumloss)]
as.matrix(ppauto_ss_dt[grcode == 43][, .(accyear, devlag, cumloss)])
as.triangle(as.matrix(ppauto_ss_dt[grcode == 43][, .(accyear, devlag, cumloss)]))
as.triangle(as.matrix(dcast(ppauto_ss_dt[grcode == 43],accyear ~ devlag,value.var = 'cumloss')))
?as.triangle
as.triangle(as.matrix(dcast(ppauto_ss_dt[grcode == 43],accyear ~ devlag,value.var = 'cumloss')))
plot(as.triangle(as.matrix(dcast(ppauto_ss_dt[grcode == 43],accyear ~ devlag,value.var = 'cumloss'))))
plot(as.triangle(as.matrix(dcast(ppauto_ss_dt[grcode == 43],accyear ~ devlag,value.var = 'cumloss'))), lattice = TRUE)
as.triangle(as.matrix(dcast(ppauto_ss_dt[grcode == 43],accyear ~ devlag,value.var = 'cumloss')))
ppauto_ss_triangle <- as.triangle(as.matrix(dcast(ppauto_ss_dt[grcode == 43],accyear ~ devlag,value.var = 'cumloss')))
MackChainLadder(ppauto_ss_triangle)
ppauto_ss_triangle
str(ppauto_ss_triangle)
ppauto_ss_triangle$dev
attr(ppauto_ss_triangle, 'dev')
ppauto_ss_triangle
as.matrix(dcast(ppauto_ss_dt[grcode == 43],accyear ~ devlag,value.var = 'cumloss'))
as.matrix(dcast(ppauto_ss_dt[grcode == 43],accyear ~ devlag,value.var = 'cumloss')[,-1,with = FALSE])
as.triangle(as.matrix(dcast(ppauto_ss_dt[grcode == 43],accyear ~ devlag,value.var = 'cumloss')[,-1,with = FALSE]))
str(as.triangle(as.matrix(dcast(ppauto_ss_dt[grcode == 43],accyear ~ devlag,value.var = 'cumloss')[,-1,with = FALSE])))
ppauto_ss_triangle <- as.triangle(as.matrix(dcast(ppauto_ss_dt[grcode == 43],accyear ~ devlag,value.var = 'cumloss')[,-1,with = FALSE])))
ppauto_ss_triangle <- as.triangle(as.matrix(dcast(ppauto_ss_dt[grcode == 43],accyear ~ devlag,value.var = 'cumloss')[,-1,with = FALSE]))
MackChainLadder(ppauto_ss_triangle)
MackChainLadder(ppauto_ss_triangle)$FullTriangle
ppauto_ss_mack <- MackChainLadder(ppauto_ss_triangle)
plot(ppauto_ss_mack)
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
ppauto_mat <- as.matrix(dcast(ppauto_ss_dt[grcode == 43]
                             ,accyear ~ devlag
                             ,value.var = 'cumloss')[,-1,with=FALSE])

ppauto_triangle <- as.triangle(ppauto_mat)

lsos()
ppauto_mack <- MackChainLadder(ppauto_triangle, est.sigma = "Mack")

ppauto_mack
ppauto_mack$f
summary(ppauto_mack)
q()
y
library(knitr)
knit2pdf("talkbm201604.Rnw")
log(0.05)
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
mi_1_monitor
rownames(mi_1_monitor)
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
library(shinystan)
?shinystan::launch_shinystan
lsos()
lsos()
knit2pdf("talkbm201604.Rnw")
ss_dt
ppauto_ss_dt
ppauto_dt
ppauto_dt[, all(EarnedPremDIR_B > 0), by = GRCODE]
ppauto_dt[, .(pos_prem = all(EarnedPremDIR_B > 0)), by = GRCODE]
ppauto_dt[, .(pos_prem = all(EarnedPremDIR_B > 0)), by = GRCODE][pos_prem == TRUE]
ppauto_dt[, .(pos_prem = all(EarnedPremDIR_B > 0)), by = GRCODE][pos_prem == TRUE, GRCODE]
use_grcode <- ppauto_dt[, .(pos_prem = all(EarnedPremDIR_B > 0)), by = GRCODE][pos_prem == TRUE, GRCODE]
use_grcode <- use_grcode[1:7]

multi_dt <- ppauto_dt[GRCODE %in% use_grcode, .(grcode = GRCODE
                                               ,accyear = AccidentYear
                                               ,devlag  = DevelopmentLag
                                               ,cumloss = CumPaidLoss_B)]

multi_dt
multi_dt <- ppauto_dt[DevelopmentYear < 1988 &
                      GRCODE %in% use_grcode, .(grcode = GRCODE
                                               ,accyear = AccidentYear
                                               ,devlag  = DevelopmentLag
                                               ,cumloss = CumPaidLoss_B)]

multi_dt
ppauto_dt
multi_dt <- ppauto_dt[DevelopmentYear < 1998 &
                      GRCODE %in% use_grcode, .(grcode = GRCODE
                                               ,accyear = AccidentYear
                                               ,devlag  = DevelopmentLag
                                               ,cumloss = CumPaidLoss_B)]

multi_dt
cohort_dt <- ss_dt[, .(maxtime = max(devlag), premium = unique(premium)), by = .(grcode, accyear)]
cohort_dt[, cohort_id := .I]

cohort_dt
cohort_dt <- multi_dt[, .(maxtime = max(devlag), premium = unique(premium)), by = .(grcode, accyear)]
cohort_dt[, cohort_id := .I]

ppauto_dt
multi_dt <- ppauto_dt[DevelopmentYear < 1998 &
                      GRCODE %in% use_grcode, .(grcode = GRCODE
                                               ,accyear = AccidentYear
                                               ,premium = EarnedPremDIR_B
                                               ,devlag  = DevelopmentLag
                                               ,cumloss = CumPaidLoss_B)]

multi_dt
cohort_dt <- multi_dt[, .(maxtime = max(devlag), premium = unique(premium)), by = .(grcode, accyear)]
cohort_dt[, cohort_id := .I]

cohort_dt
use_grcode <- ppauto_dt[, .(pos_prem = all(EarnedPremDIR_B > 0)), by = GRCODE][pos_prem == TRUE, GRCODE]
use_grcode <- use_grcode[1:7]

multi_dt <- ppauto_dt[DevelopmentYear < 1998 &
                      GRCODE %in% use_grcode, .(grcode = GRCODE
                                               ,accyear = AccidentYear
                                               ,premium = EarnedPremDIR_B
                                               ,devlag  = DevelopmentLag
                                               ,cumloss = CumPaidLoss_B)]

cohort_dt <- multi_dt[, .(maxtime = max(devlag), premium = unique(premium)), by = .(grcode, accyear)]
cohort_dt[, cohort_id := .I]

lst_standata <- list(growthmodel_id = 0   # Use loglogistic
                    ,n_data         = multi_dt[, .N]
                    ,n_time         = multi_dt[, length(unique(devlag))]
                    ,n_cohort       = cohort_dt[, length(unique(accyear))]
                    ,cohort_id      = match(multi_dt$accyear, unique(cohort_dt$accyear))
                    ,t_value        = multi_dt[, sort(unique(devlag))]
                    ,t_idx          = multi_dt[, match(devlag, sort(unique(devlag)))]
                    ,premium        = cohort_dt$premium
                    ,loss           = multi_dt$cumloss
                    ,cohort_maxtime = cohort_dt$maxtime
                    )

mi_2_stanfit <- stan('losscurves_multiple.stan'
                    ,data    = lst_standata
                    ,iter    = 500
                    ,chains  = 8
                    ,verbose = TRUE
                     )

use_grcode <- ppauto_dt[, .(pos_prem = all(EarnedPremDIR_B > 0)), by = GRCODE][pos_prem == TRUE, GRCODE]
use_grcode <- use_grcode[1:7]

multi_dt <- ppauto_dt[DevelopmentYear < 1998 &
                      GRCODE %in% use_grcode, .(grcode = GRCODE
                                               ,accyear = AccidentYear
                                               ,premium = EarnedPremDIR_B
                                               ,devlag  = DevelopmentLag
                                               ,cumloss = CumPaidLoss_B)]

cohort_dt <- multi_dt[, .(maxtime = max(devlag), premium = unique(premium)), by = .(grcode, accyear)]
cohort_dt[, cohort_id := .I]

lst_standata <- list(growthmodel_id = 0   # Use loglogistic
                    ,n_data         = multi_dt[, .N]
                    ,n_time         = multi_dt[, length(unique(devlag))]
                    ,n_cohort       = cohort_dt[, length(unique(accyear))]
                    ,cohort_id      = match(multi_dt$accyear, unique(cohort_dt$accyear))
                    ,t_value        = multi_dt[, sort(unique(devlag))]
                    ,t_idx          = multi_dt[, match(devlag, sort(unique(devlag)))]
                    ,premium        = cohort_dt$premium
                    ,loss           = multi_dt$cumloss
                    ,cohort_maxtime = cohort_dt$maxtime
                    )

mi_2_stanfit <- stan('losscurves_multiple.stan'
                    ,data    = lst_standata
                    ,iter    = 500
                    ,chains  = 8
                    ,verbose = TRUE
                     )

lst_standata <- list(growthmodel_id = 0   # Use loglogistic
                    ,n_data         = multi_dt[, .N]
                    ,n_time         = multi_dt[, length(unique(devlag))]
                    ,n_cohort       = cohort_dt[, length(unique(accyear))]
                    ,n_org          = cohort_dt[, length(unique(grcode))]
                    ,cohort_id      = match(multi_dt$accyear, unique(cohort_dt$accyear))
                    ,org_id         = match(multi_dt$grcode, unique(cohort_dt$grcode))
                    ,t_value        = multi_dt[, sort(unique(devlag))]
                    ,t_idx          = multi_dt[, match(devlag, sort(unique(devlag)))]
                    ,premium        = cohort_dt$premium
                    ,loss           = multi_dt$cumloss
                    ,cohort_maxtime = cohort_dt$maxtime
                    )

mi_2_stanfit <- stan('losscurves_multiple.stan'
                    ,data    = lst_standata
                    ,iter    = 500
                    ,chains  = 8
                    ,verbose = TRUE
                     )

lst_standata <- list(growthmodel_id = 0   # Use loglogistic

                    ,n_data         = multi_dt[, .N]
                    ,n_time         = multi_dt[, length(unique(devlag))]
                    ,n_cohort       = cohort_dt[, length(unique(accyear))]
                    ,n_org          = cohort_dt[, length(unique(grcode))]
                    ,cohort_id      = match(multi_dt$accyear, unique(cohort_dt$accyear))
                    ,org_id         = match(multi_dt$grcode, unique(cohort_dt$grcode))
                    ,t_value        = multi_dt[, sort(unique(devlag))]
                    ,t_idx          = multi_dt[, match(devlag, sort(unique(devlag)))]
                    ,premium        = cohort_dt$premium
                    ,loss           = multi_dt$cumloss
                    ,cohort_maxtime = cohort_dt$maxtime
                    )

mi_2_stanfit <- stan('losscurves_multiple.stan'
                    ,data    = lst_standata
                    ,iter    = 500
                    ,chains  = 8
                    ,verbose = TRUE
                     )

lst_standata <- list(growthmodel_id = 0   # Use loglogistic
                    ,n_data         = multi_dt[, .N]
                    ,n_time         = multi_dt[, length(unique(devlag))]
                    ,n_cohort       = cohort_dt[, length(unique(accyear))]
                    ,n_org          = cohort_dt[, length(unique(grcode))]
                    ,cohort_id      = match(multi_dt$accyear, unique(cohort_dt$accyear))
                    ,org_id         = match(multi_dt$grcode, unique(cohort_dt$grcode))
                    ,t_value        = multi_dt[, sort(unique(devlag))]
                    ,t_idx          = multi_dt[, match(devlag, sort(unique(devlag)))]
                    ,premium        = cohort_dt$premium
                    ,loss           = multi_dt$cumloss
                    ,cohort_maxtime = cohort_dt$maxtime
                    )

mi_2_stanfit <- stan('losscurves_multiple.stan'
                    ,data    = lst_standata
                    ,iter    = 500
                    ,chains  = 8
                    ,verbose = TRUE
                     )

lst_standata <- list(growthmodel_id = 0   # Use loglogistic
                    ,n_data         = multi_dt[, .N]
                    ,n_time         = multi_dt[, length(unique(devlag))]
                    ,n_cohort       = cohort_dt[, length(unique(accyear))]
                    ,n_org          = cohort_dt[, length(unique(grcode))]
                    ,cohort_id      = match(multi_dt$accyear, unique(cohort_dt$accyear))
                    ,org_id         = match(multi_dt$grcode, unique(cohort_dt$grcode))
                    ,t_value        = multi_dt[, sort(unique(devlag))]
                    ,t_idx          = multi_dt[, match(devlag, sort(unique(devlag)))]
                    ,premium        = cohort_dt$premium
                    ,loss           = multi_dt$cumloss
                    ,cohort_maxtime = cohort_dt$maxtime
                    )

mi_2_stanfit <- stan('losscurves_multiple.stan'
                    ,data    = lst_standata
                    ,iter    = 500
                    ,chains  = 8
                    ,verbose = TRUE
                     )

lst_standata <- list(growthmodel_id = 0   # Use loglogistic

                    ,n_data         = multi_dt[, .N]
                    ,n_time         = multi_dt[, length(unique(devlag))]
                    ,n_cohort       = cohort_dt[, length(unique(accyear))]
                    ,n_org          = cohort_dt[, length(unique(grcode))]
                    ,cohort_id      = match(multi_dt$accyear, unique(cohort_dt$accyear))
                    ,org_id         = match(multi_dt$grcode, unique(cohort_dt$grcode))
                    ,t_value        = multi_dt[, sort(unique(devlag))]
                    ,t_idx          = multi_dt[, match(devlag, sort(unique(devlag)))]
                    ,premium        = cohort_dt$premium
                    ,loss           = multi_dt$cumloss
                    ,cohort_maxtime = cohort_dt$maxtime
                    )

mi_2_stanfit <- stan('losscurves_multiple.stan'
                    ,data    = lst_standata
                    ,iter    = 500
                    ,chains  = 8
                    ,verbose = TRUE
                     )

lst_standata <- list(growthmodel_id = 0   # Use loglogistic
                    ,n_data         = multi_dt[, .N]
                    ,n_time         = multi_dt[, length(unique(devlag))]
                    ,n_cohort       = cohort_dt[, length(unique(accyear))]
                    ,n_org          = cohort_dt[, length(unique(grcode))]
                    ,cohort_id      = match(multi_dt$accyear, unique(cohort_dt$accyear))
                    ,org_id         = match(multi_dt$grcode, unique(cohort_dt$grcode))
                    ,t_value        = multi_dt[, sort(unique(devlag))]
                    ,t_idx          = multi_dt[, match(devlag, sort(unique(devlag)))]
                    ,premium        = cohort_dt$premium
                    ,loss           = multi_dt$cumloss
                    ,cohort_maxtime = cohort_dt$maxtime
                    )

mi_2_stanfit <- stan('losscurves_multiple.stan'
                    ,data    = lst_standata
                    ,iter    = 500
                    ,chains  = 8
                    ,verbose = TRUE
                     )

lst_standata <- list(growthmodel_id = 0   # Use loglogistic
                    ,n_data         = multi_dt[, .N]
                    ,n_time         = multi_dt[, length(unique(devlag))]
                    ,n_cohort       = cohort_dt[, length(unique(accyear))]
                    ,n_org          = cohort_dt[, length(unique(grcode))]
                    ,cohort_id      = match(multi_dt$accyear, unique(cohort_dt$accyear))
                    ,org_id         = match(multi_dt$grcode, unique(cohort_dt$grcode))
                    ,t_value        = multi_dt[, sort(unique(devlag))]
                    ,t_idx          = multi_dt[, match(devlag, sort(unique(devlag)))]
                    ,premium        = cohort_dt$premium
                    ,loss           = multi_dt$cumloss
                    ,cohort_maxtime = cohort_dt$maxtime
                    )

mi_2_stanfit <- stan('losscurves_multiple.stan'
                    ,data    = lst_standata
                    ,iter    = 500
                    ,chains  = 8
                    ,verbose = TRUE
                     )

lst_standata <- list(growthmodel_id = 0   # Use loglogistic
                    ,n_data         = multi_dt[, .N]
                    ,n_time         = multi_dt[, length(unique(devlag))]
                    ,n_cohort       = cohort_dt[, length(unique(accyear))]
                    ,n_org          = cohort_dt[, length(unique(grcode))]
                    ,cohort_id      = match(multi_dt$accyear, unique(cohort_dt$accyear))
                    ,org_id         = match(multi_dt$grcode, unique(cohort_dt$grcode))
                    ,t_value        = multi_dt[, sort(unique(devlag))]
                    ,t_idx          = multi_dt[, match(devlag, sort(unique(devlag)))]
                    ,premium        = cohort_dt$premium
                    ,loss           = multi_dt$cumloss
                    ,cohort_maxtime = cohort_dt$maxtime
                    )

mi_2_stanfit <- stan('losscurves_multiple.stan'
                    ,data    = lst_standata
                    ,iter    = 500
                    ,chains  = 8
                    ,verbose = TRUE
                     )

lst_standata
lst_standata <- list(growthmodel_id = 0   # Use loglogistic
                    ,n_data         = multi_dt[, .N]
                    ,n_time         = multi_dt[, length(unique(devlag))]
                    ,n_cohort       = cohort_dt[, length(unique(accyear))]
                    ,n_org          = cohort_dt[, length(unique(grcode))]
                    ,cohort_id      = match(multi_dt$accyear, unique(cohort_dt$accyear))
                    ,org_id         = match(multi_dt$grcode, unique(cohort_dt$grcode))
                    ,t_value        = multi_dt[, sort(unique(devlag))]
                    ,t_idx          = multi_dt[, match(devlag, sort(unique(devlag)))]
                    ,premium        = cohort_dt$premium
                    ,loss           = multi_dt$cumloss
                    ,cohort_maxtime = cohort_dt$maxtime
                    )

mi_2_stanfit <- stan('losscurves_multiple.stan'
                    ,data    = lst_standata
                    ,iter    = 500
                    ,chains  = 8
                    ,verbose = TRUE
                     )

lst_standata <- list(growthmodel_id = 0   # Use loglogistic
                    ,n_data         = multi_dt[, .N]
                    ,n_time         = multi_dt[, length(unique(devlag))]
                    ,n_cohort       = cohort_dt[, length(unique(accyear))]
                    ,n_org          = cohort_dt[, length(unique(grcode))]
                    ,cohort_id      = match(multi_dt$accyear, unique(cohort_dt$accyear))
                    ,org_id         = match(multi_dt$grcode, unique(cohort_dt$grcode))
                    ,t_value        = multi_dt[, sort(unique(devlag))]
                    ,t_idx          = multi_dt[, match(devlag, sort(unique(devlag)))]
                    ,premium        = cohort_dt$premium
                    ,loss           = multi_dt$cumloss
                    ,cohort_maxtime = cohort_dt$maxtime
                    )

mi_2_stanfit <- stan('losscurves_multiple.stan'
                    ,data    = lst_standata
                    ,iter    = 500
                    ,chains  = 8
                    ,verbose = TRUE
                     )

lst_standata <- list(growthmodel_id = 0   # Use loglogistic
                    ,n_data         = multi_dt[, .N]
                    ,n_time         = multi_dt[, length(unique(devlag))]
                    ,n_cohort       = cohort_dt[, length(unique(accyear))]
                    ,n_org          = cohort_dt[, length(unique(grcode))]
                    ,n_cohortdata   = cohort_dt[, .N]
                    ,cohort_id      = match(multi_dt$accyear, unique(cohort_dt$accyear))
                    ,org_id         = match(multi_dt$grcode, unique(cohort_dt$grcode))
                    ,t_value        = multi_dt[, sort(unique(devlag))]
                    ,t_idx          = multi_dt[, match(devlag, sort(unique(devlag)))]
                    ,premium        = cohort_dt$premium
                    ,loss           = multi_dt$cumloss
                    ,cohort_maxtime = cohort_dt$maxtime
                    )

mi_2_stanfit <- stan('losscurves_multiple.stan'
                    ,data    = lst_standata
                    ,iter    = 500
                    ,chains  = 8
                    ,verbose = TRUE
                     )

lst_standata <- list(growthmodel_id = 0   # Use loglogistic
lst_standata <- list(growthmodel_id = 0   # Use loglogistic
                    ,n_data         = multi_dt[, .N]
                    ,n_time         = multi_dt[, length(unique(devlag))]
                    ,n_cohort       = cohort_dt[, length(unique(accyear))]
                    ,n_org          = cohort_dt[, length(unique(grcode))]
                    ,n_cohortdata   = cohort_dt[, .N]
                    ,cohort_id      = match(multi_dt$accyear, unique(cohort_dt$accyear))
                    ,org_id         = match(multi_dt$grcode, unique(cohort_dt$grcode))
                    ,t_value        = multi_dt[, sort(unique(devlag))]
                    ,t_idx          = multi_dt[, match(devlag, sort(unique(devlag)))]
                    ,premium        = cohort_dt$premium
                    ,loss           = multi_dt$cumloss
                    ,cohort_maxtime = cohort_dt$maxtime
                    )

mi_2_stanfit <- stan('losscurves_multiple.stan'
                    ,data    = lst_standata
                    ,iter    = 500
                    ,chains  = 8
                    ,verbose = TRUE
                     )

lst_standata <- list(growthmodel_id = 0   # Use loglogistic
                    ,n_data         = multi_dt[, .N]
                    ,n_time         = multi_dt[, length(unique(devlag))]
                    ,n_cohort       = cohort_dt[, length(unique(accyear))]
                    ,n_org          = cohort_dt[, length(unique(grcode))]
                    ,n_cohortdata   = cohort_dt[, .N]
                    ,cohort_id      = match(multi_dt$accyear, unique(cohort_dt$accyear))
                    ,org_id         = match(multi_dt$grcode, unique(cohort_dt$grcode))
                    ,t_value        = multi_dt[, sort(unique(devlag))]
                    ,t_idx          = multi_dt[, match(devlag, sort(unique(devlag)))]
                    ,premium        = cohort_dt$premium
                    ,loss           = multi_dt$cumloss
                    ,cohort_maxtime = cohort_dt$maxtime
                    )

mi_2_stanfit <- stan('losscurves_multiple.stan'
                    ,data    = lst_standata
                    ,iter    = 500
                    ,chains  = 8
                    ,verbose = TRUE
                     )

traceplot(mi_2_stanfit)
traceplot(mi_2_stanfit, pars = c("omega", "theta", "LR"))
traceplot(mi_2_stanfit, pars = c("omega", "theta"))
grcodes    <- ppauto_dt[, .(pos_prem = all(EarnedPremDIR_B > 0)), by = GRCODE][pos_prem == TRUE, GRCODE]
use_grcode <- grcodes[1:8]

multi_dt <- ppauto_dt[DevelopmentYear < 1998 &
                      GRCODE %in% use_grcode, .(grcode = GRCODE
                                               ,accyear = AccidentYear
                                               ,premium = EarnedPremDIR_B
                                               ,devlag  = DevelopmentLag
                                               ,cumloss = CumPaidLoss_B)]

cohort_dt <- multi_dt[, .(maxtime = max(devlag), premium = unique(premium)), by = .(grcode, accyear)]
cohort_dt[, cohort_id := .I]

lst_standata <- list(growthmodel_id = 0   # Use loglogistic
                    ,n_data         = multi_dt[, .N]
                    ,n_time         = multi_dt[, length(unique(devlag))]
                    ,n_cohort       = cohort_dt[, length(unique(accyear))]
                    ,n_org          = cohort_dt[, length(unique(grcode))]
                    ,n_cohortdata   = cohort_dt[, .N]
                    ,cohort_id      = match(multi_dt$accyear, unique(cohort_dt$accyear))
                    ,org_id         = match(multi_dt$grcode, unique(cohort_dt$grcode))
                    ,t_value        = multi_dt[, sort(unique(devlag))]
                    ,t_idx          = multi_dt[, match(devlag, sort(unique(devlag)))]
                    ,premium        = cohort_dt$premium
                    ,loss           = multi_dt$cumloss
                    ,cohort_maxtime = cohort_dt$maxtime
                    )

mi_2_stanfit <- stan('losscurves_multiple.stan'
                    ,data    = lst_standata
                    ,iter    = 500
                    ,chains  = 8
                    ,verbose = TRUE
                     )


lst_standata
multi_dt
merge(multi_dt, cohort_dt, by = c("grcode", "accyear"))
multi_dt
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
mi_2_stanfit <- stan('losscurves_multiple.stan'
                    ,data    = lst_standata
                    ,iter    = 500
                    ,chains  = 8
                    ,verbose = TRUE
                     )

knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
mi_2_monitor
plotdata_dt <- mi_1_monitor[, c('mean', '10%', '50%', '90%')]

setDT(plotdata_dt)
plotdata_dt[, variable := factor(use_vars, levels = use_vars)]

ggplot(plotdata_dt) +
      geom_point(aes(x = variable, y = mean)) +
      geom_errorbar(aes(x = variable, y = mean, ymin = `10%`, ymax = `90%`), width = 0) +
      expand_limits(y = 0) +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
      xlab("Parameter") +
      ylab("Value")

plotdata_dt <- mi_1_monitor[, c('mean', '10%', '50%', '90%')]

setDT(plotdata_dt)

plotdata_dt
plotdata_dt <- mi_1_monitor[, c('mean', '10%', '50%', '90%')]

setDT(plotdata_dt)
plotdata_dt[, variable := factor(rownames(mi_1_monitor), levels = rownames(mi_1_monitor))]

plotdata_dt
ggplot(plotdata_dt) +
      geom_point(aes(x = variable, y = mean)) +
      geom_errorbar(aes(x = variable, y = mean, ymin = `10%`, ymax = `90%`), width = 0) +
      expand_limits(y = 0) +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
      xlab("Parameter") +
      ylab("Value")

plotdata_dt
plotdata_dt
plotdata_dt$variable
plotdata_dt <- mi_1_monitor[, c('mean', '10%', '50%', '90%')]

plotdata_dt
rownames(plotdata_dt)
str(extract(mi_2_stanfit))
mi_2_monitor
plotdata_dt <- mi_2_monitor[, c('mean', '10%', '50%', '90%')]

setDT(plotdata_dt)
plotdata_dt[, variable := factor(rownames(mi_2_monitor)
                                ,levels = rownames(mi_2_monitor))]

ggplot(plotdata_dt) +
      geom_point(aes(x = variable, y = mean)) +
      geom_errorbar(aes(x = variable, y = mean, ymin = `10%`, ymax = `90%`), width = 0) +
      expand_limits(y = 0) +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
      xlab("Parameter") +
      ylab("Value")

plotdata_dt
plotdata_dt[grep("omega", variable)]
plotdata_dt[grep("omega|theta|LR", variable)]
ggplot(plotdata_dt[grep("omega|theta|LR", variable)]) +
      geom_point(aes(x = variable, y = mean)) +
      geom_errorbar(aes(x = variable, y = mean, ymin = `10%`, ymax = `90%`), width = 0) +
      expand_limits(y = 0) +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
      xlab("Parameter") +
      ylab("Value")

ggplot(plotdata_dt[grep("LR", variable)]) +
      geom_point(aes(x = variable, y = mean)) +
      geom_errorbar(aes(x = variable, y = mean, ymin = `10%`, ymax = `90%`), width = 0) +
      expand_limits(y = 0) +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
      xlab("Parameter") +
      ylab("Value")

ggplot(plotdata_dt[grep("^LR", variable)]) +
      geom_point(aes(x = variable, y = mean)) +
      geom_errorbar(aes(x = variable, y = mean, ymin = `10%`, ymax = `90%`), width = 0) +
      expand_limits(y = 0) +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
      xlab("Parameter") +
      ylab("Value")

ggplot(plotdata_dt[grep("hyper", variable)]) +
      geom_point(aes(x = variable, y = mean)) +
      geom_errorbar(aes(x = variable, y = mean, ymin = `10%`, ymax = `90%`), width = 0) +
      expand_limits(y = 0) +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
      xlab("Parameter") +
      ylab("Value")

ggplot(plotdata_dt[grep("hyper|mu_LR|sd_LR", variable)]) +
      geom_point(aes(x = variable, y = mean)) +
      geom_errorbar(aes(x = variable, y = mean, ymin = `10%`, ymax = `90%`), width = 0) +
      expand_limits(y = 0) +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
      xlab("Parameter") +
      ylab("Value")
ggplot(plotdata_dt[grep("hyper|_exp", variable)]) +
      geom_point(aes(x = variable, y = mean)) +
      geom_errorbar(aes(x = variable, y = mean, ymin = `10%`, ymax = `90%`), width = 0) +
      expand_limits(y = 0) +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
      xlab("Parameter") +
      ylab("Value")

ggplot(plotdata_dt[grep("hyper|sd_LR|_exp", variable)]) +
      geom_point(aes(x = variable, y = mean)) +
      geom_errorbar(aes(x = variable, y = mean, ymin = `10%`, ymax = `90%`), width = 0) +
      expand_limits(y = 0) +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
      xlab("Parameter") +
      ylab("Value")

knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
mi_2_stanfit <- stan(stanfile
                    ,data    = lst_standata
                    ,iter    = 500
                    ,chains  = 8
                    ,verbose = TRUE
                     )

str(extract(mi_2_stanfit))
extract(mi_2_stanfit)$ppc_minLR
extract(mi_2_stanfit)$ppc_maxLR
lsos()
multi_dt
multi_dt <- ppauto_dt[DevelopmentYear < 1998 &
                      GRCODE %in% use_grcode, .(grcode    = GRCODE
                                               ,accyear   = AccidentYear
                                               ,premium   = EarnedPremDIR_B
                                               ,devlag    = DevelopmentLag
                                               ,cumloss   = CumPaidLoss_B
                                               ,lossratio = CumPaidLoss_B / EarnedPremDIR_B
                                                )]

multi_dt
multi_dt[devlag >= 8]
multi_dt[devlag >= 8, max(lossratio)]
multi_dt[devlag >= 8, .(minlr = min(lossratio), maxlr = max(lossratio)]
multi_dt[devlag >= 8, .(minlr = min(lossratio), maxlr = max(lossratio))]
ppc_dt <- multi_dt[devlag >= 8, .(minlr = min(lossratio), maxlr = max(lossratio))]

ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_minLR), colour = 'blue') +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_maxLR), colour = 'red') +
    scale_x_continuous(limits = c(0, 2))

ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_minLR), colour = 'blue') +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_maxLR), colour = 'red') +
    geom_line(aes(x = ppc_dt$minlr, y = c(0, 30)), colour = 'blue') + 
    geom_line(aes(x = ppc_dt$maxlr, y = c(0, 30)), colour = 'red') + 
    scale_x_continuous(limits = c(0, 2))

ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_minLR), colour = 'blue') +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_maxLR), colour = 'red') +
    geom_line(aes(x = ppc_dt$minlr, y = c(0, 30)), colour = 'blue') + 
    geom_line(aes(x = ppc_dt$maxlr, y = c(0, 30)), colour = 'red') + 
    scale_x_continuous(limits = c(0, 2))

ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_minLR), colour = 'blue') +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_maxLR), colour = 'red') +
    geom_line(aes(x = ppc_dt$minlr, y = c(0, 30))) + 
    geom_line(aes(x = ppc_dt$maxlr, y = c(0, 30))) + 
    scale_x_continuous(limits = c(0, 2))

ppc_dt <- multi_dt[devlag > 9, .(minlr = min(lossratio), maxlr = max(lossratio))]

ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_minLR), colour = 'blue') +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_maxLR), colour = 'red') +
    geom_line(aes(x = ppc_dt$minlr, y = c(0, 30))) +
    geom_line(aes(x = ppc_dt$maxlr, y = c(0, 30))) +
    scale_x_continuous(limits = c(0, 2))

multi_dt
multi_dt[devlag == max(devlag)]
ppc_dt <- multi_dt[devlag == max(devlag)][devlag >= 8, .(minlr = min(lossratio)
                                                        ,maxlr = max(lossratio))]

ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_minLR), colour = 'blue') +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_maxLR), colour = 'red') +
    geom_line(aes(x = ppc_dt$minlr, y = c(0, 30))) +
    geom_line(aes(x = ppc_dt$maxlr, y = c(0, 30))) +
    scale_x_continuous(limits = c(0, 2))

ppc_dt <- multi_dt[devlag == max(devlag)][devlag >= 8, .(minlr = min(lossratio)
                                                        ,maxlr = max(lossratio))]

min_plot <- ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_minLR), colour = 'blue') +
    geom_line(aes(x = ppc_dt$minlr, y = c(0, 30)))

max_plot <- ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_maxLR), colour = 'blue') +
    geom_line(aes(x = ppc_dt$maxlr, y = c(0, 30)))

grid.arrange(min_plot, max_plot)

min_plot <- ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_minLR)) +
    geom_line(aes(x = ppc_dt$minlr, y = c(0, 30)), colour = 'red') +
    xlab("Loss Ratio")

max_plot <- ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_maxLR)) +
    geom_line(aes(x = ppc_dt$maxlr, y = c(0, 30)), colour = 'red') +
    xlab("Loss Ratio")

grid.arrange(min_plot, max_plot)

ppc_dt <- multi_dt[devlag == max(devlag)][devlag >= 9, .(minlr = min(lossratio)
                                                        ,maxlr = max(lossratio))]

min_plot <- ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_minLR)) +
    geom_line(aes(x = ppc_dt$minlr, y = c(0, 30)), colour = 'red') +
    xlab("Minimum Loss Ratio")

max_plot <- ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_maxLR)) +
    geom_line(aes(x = ppc_dt$maxlr, y = c(0, 30)), colour = 'red') +
    xlab("Maximum Loss Ratio")

grid.arrange(min_plot, max_plot, ncol = 2)

ppc_dt <- multi_dt[devlag == max(devlag)][devlag >= 9, .(minlr = min(lossratio)
                                                        ,maxlr = max(lossratio))]

min_plot <- ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_minLR)) +
    geom_line(aes(x = ppc_dt$minlr, y = c(0, 30)), colour = 'red') +
    scale_x_continuous(limits = c(0,0.5)) +
    xlab("Minimum Loss Ratio")

max_plot <- ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_maxLR)) +
    geom_line(aes(x = ppc_dt$maxlr, y = c(0, 30)), colour = 'red') +
    scale_x_continuous(limits = c(1,1.5)) +
    xlab("Maximum Loss Ratio")

grid.arrange(min_plot, max_plot, ncol = 2)

ppc_dt <- multi_dt[devlag == max(devlag)][devlag >= 9, .(minlr = min(lossratio)
                                                        ,maxlr = max(lossratio))]

min_plot <- ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_minLR)) +
    geom_line(aes(x = ppc_dt$minlr, y = c(0, 30)), colour = 'red') +
    scale_x_continuous(limits = c(0,0.5)) +
    xlab("Minimum Loss Ratio")

max_plot <- ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_maxLR)) +
    geom_line(aes(x = ppc_dt$maxlr, y = c(0, 30)), colour = 'red') +
    scale_x_continuous(limits = c(1.2,1.5)) +
    xlab("Maximum Loss Ratio")

grid.arrange(min_plot, max_plot, ncol = 2)

ppc_dt <- multi_dt[devlag == max(devlag)][devlag >= 9, .(minlr = min(lossratio)
                                                        ,maxlr = max(lossratio))]

min_plot <- ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_minLR)) +
    geom_line(aes(x = ppc_dt$minlr, y = c(0, 30)), colour = 'red') +
    scale_x_continuous(limits = c(0,0.5)) +
    xlab("Minimum Loss Ratio")

max_plot <- ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_maxLR)) +
    geom_line(aes(x = ppc_dt$maxlr, y = c(0, 30)), colour = 'red') +
    scale_x_continuous(limits = c(1.25,1.5)) +
    xlab("Maximum Loss Ratio")

grid.arrange(min_plot, max_plot, ncol = 2)

ppc_dt <- multi_dt[devlag == max(devlag)][devlag >= 7, .(minlr = min(lossratio)
                                                        ,maxlr = max(lossratio))]

min_plot <- ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_minLR)) +
    geom_line(aes(x = ppc_dt$minlr, y = c(0, 30)), colour = 'red') +
    scale_x_continuous(limits = c(0,0.5)) +
    xlab("Minimum Loss Ratio")

max_plot <- ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_maxLR)) +
    geom_line(aes(x = ppc_dt$maxlr, y = c(0, 30)), colour = 'red') +
    scale_x_continuous(limits = c(1.25,1.5)) +
    xlab("Maximum Loss Ratio")

grid.arrange(min_plot, max_plot, ncol = 2)

ppc_dt
ppc_dt <- multi_dt[devlag == max(devlag)][devlag >= 7, .(minlr = min(lossratio),maxlr = max(lossratio))]
multi_dt[devlag == max(devlag)][devlag >= 7, .(minlr = min(lossratio),maxlr = max(lossratio))]
multi_dt[devlag == max(devlag)][, .SD[devlag >= .BY$devlag, .(minlr = min(lossratio), maxlr = max(lossratio))], by = devlag]
multi_dt[devlag == max(devlag)]
multi_dt[devlag == max(devlag), by = accyear]
multi_dt
multi_dt
multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)]
multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)][devlag >= 8]
ppc_dt <- multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)][
    devlag >= 9, .(minlr = min(lossratio)
                  ,maxlr = max(lossratio))]

ppc_dt
minmax_dt <- multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)][
    ,.SD[devlag == .BY$devlag, .(minlr = min(lossratio), maxlr = max(lossratio))], by = devlag]

minmax_dt
minmax_dt[devlag == 10]
multi_dt[devlag == 10]
minmax_dt <- multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)][
    ,.SD[devlag == .BY$devlag, .(minlr = min(lossratio), maxlr = max(lossratio))], by = devlag]

ppc_dt <- multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)][
    devlag >= 8, .(minlr = min(lossratio)
                  ,maxlr = max(lossratio))]

min_plot <- ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_minLR)) +
    geom_line(aes(x = ppc_dt$minlr, y = c(0, 30)), colour = 'red') +
    scale_x_continuous(limits = c(0,0.5)) +
    xlab("Minimum Loss Ratio")

max_plot <- ggplot() +
    geom_density(aes(x = extract(mi_2_stanfit)$ppc_maxLR)) +
    geom_line(aes(x = ppc_dt$maxlr, y = c(0, 30)), colour = 'red') +
    scale_x_continuous(limits = c(1.25,1.5)) +
    xlab("Maximum Loss Ratio")

grid.arrange(min_plot, max_plot, ncol = 2)

knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
extract(mi_2_stanfit)$t_099
str(extract(mi_2_stanfit)$t_099)
apply(extract(mi_2_stanfit)$t_099, 1, median)
multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)][devlag >= 8]
multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)][devlag >= 8][order(accyear)]
multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)][devlag >= 8][order(grcode, accyear)]
multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)][devlag >= 8][order(grcode, accyear, devlag)]
multi_dt
multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)]
multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)]$cumloss
multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)]
multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)][, .(grcode, accyear, cumloss)]
multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)][, .(grcode, accyear, totloss = cumloss)]
merge(multi_dt, multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)][, .(grcode, accyear, totloss = cumloss)], by = c("grcode", "accyear"))
merge(multi_dt, multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)][, .(grcode, accyear, totloss = cumloss)], by = c("grcode", "accyear"))[, .(grocde, accyear, premium, devlag, gf = cumloss / totloss)]
merge(multi_dt, multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)][, .(grcode, accyear, totloss = cumloss)], by = c("grcode", "accyear"))[, .(grcode, accyear, premium, devlag, gf = cumloss / totloss)]
merge(multi_dt, multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)][, .(grcode, accyear, totloss = cumloss)], by = c("grcode", "accyear"))[, .(grcode, accyear, premium, devlag, gf = cumloss / totloss)][1:10]
merge(multi_dt, multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)][, .(grcode, accyear, totloss = cumloss)], by = c("grcode", "accyear"))[, .(grcode, accyear, premium, devlag, cumloss, totloss, gf = cumloss / totloss)][1:10]
merge(multi_dt, multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)][, .(grcode, accyear, totloss = cumloss)], by = c("grcode", "accyear"))[, .(grcode, accyear, premium, devlag, cumloss, totloss, gf = cumloss / totloss)]
merge(multi_dt, multi_dt[, .SD[devlag == max(devlag)], by = .(grcode, accyear)][, .(grcode, accyear, totloss = cumloss)], by = c("grcode", "accyear"))[, .(grcode, accyear, premium, devlag, cumloss, totloss, gf = cumloss / totloss)][accyear <= 1990]
median_time <- apply(extract(mi_2_stanfit)$t_098, 1, median)


maxloss_dt <- multi_dt[,.SD[devlag == max(devlag)]
                       ,by = .(grcode, accyear)
                       ][, .(grcode, accyear, totloss = cumloss)]
    
ppc_dt <- merge(multi_dt, maxloss_dt, by = c("grcode", "accyear"))
ppc_dt <- ppc_dt[accyear <= 1990][, .(grcode, accyear, premium, devlag, cumloss, totloss, gf = cumloss / totloss)]

maxloss_dt <- multi_dt[,.SD[devlag == max(devlag)]
                       ,by = .(grcode, accyear)
                       ][, .(grcode, accyear, totloss = cumloss)]
    
ppc_dt <- merge(multi_dt, maxloss_dt, by = c("grcode", "accyear"))
ppc_dt <- ppc_dt[accyear <= 1990][, .(grcode, accyear, premium, devlag, cumloss, totloss, gf = cumloss / totloss)]

ppc_dt
ppc_dt[, .SD[gf >= 0.98], by = c("grcode", "accyear")]
ppc_dt[gf >= 0.98,, by = c("grcode", "accyear")]
ppc_dt[, .SD[gf >= 0.98], by = c("grcode", "accyear")]
ppc_dt[, .SD[gf >= 0.98], by = c("grcode", "accyear")][, .SD[devlag == min(devlag)], by =  grcode]
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
ppc_dt[, .SD[gf >= 0.98], by = c("grcode", "accyear")][, .SD[devlag == min(devlag)], by =  grcode]
ppc_dt[, .SD[gf >= 0.98], by = c("grcode", "accyear")][, .SD[devlag == min(devlag)], by =  grcode]
ppc_dt[, .SD[gf >= 0.98], by = c("grcode", "accyear")][, .SD[devlag == min(devlag)][, median(devlag)], by =  grcode]
ppc_dt[, .SD[gf >= 0.98], by = c("grcode", "accyear")][, .SD[devlag == min(devlag)], by =  grcode]
ppc_dt[, .SD[gf >= 0.98], by = c("grcode", "accyear")][, .SD[devlag == min(devlag)], by =  grcode][, median(devlag), by = grcode]
ppc_dt[, .SD[gf >= 0.98], by = c("grcode", "accyear")][, .SD[devlag == min(devlag)], by =  grcode][, median(devlag)]
extract(mi_2_stanfit)$t_098
ggplot() + geom_histogram(aes(x = extract(mi_2_stanfit)$t_098))
ggplot() + geom_histogram(aes(x = extract(mi_2_stanfit)$t_098))
extract(mi_2_stanfit)$t_098
apply(extract(mi_2_stanfit)$t_098, 1, median)
qplot(apply(extract(mi_2_stanfit)$t_098, 1, median), geom = 'histogram')
apply(extract(mi_2_stanfit)$t_098, 1, median)
extract(mi_2_stanfit)$t_098
apply(extract(mi_2_stanfit)$t_098, 1, sort)
apply(extract(mi_2_stanfit)$t_098, 1, function(x) paste(sort(x)))
apply(extract(mi_2_stanfit)$t_098, 1, sort)
apply(extract(mi_2_stanfit)$t_098, 1, sort)[,1:10]
apply(extract(mi_2_stanfit)$t_098, 1, median)
apply(extract(mi_2_stanfit)$t_098, 1, length)
apply(extract(mi_2_stanfit)$t_098, 2, median)
str(extract(mi_2_stanfit)$t_098)
apply(extract(mi_2_stanfit)$t_098, 1, length)
apply(extract(mi_2_stanfit)$t_098, 1, median)
?median
extract(mi_2_stanfit)$t_098[1,]
median(extract(mi_2_stanfit)$t_098[1,])
extract(mi_2_stanfit)$t_098[1:10,]
extract(mi_2_stanfit)$t_098[1:30,]
extract(mi_2_stanfit)$t_098[1,]
sort(extract(mi_2_stanfit)$t_098[1,])
sort(extract(mi_2_stanfit)$t_098[2,])
apply(extract(mi_2_stanfit)$t_098, 1, function(x) quantile(x, prob = 0.1))
apply(extract(mi_2_stanfit)$t_098, 1, function(x) round(quantile(x, prob = 0.1), 0))
ppc_dt
ppc_dt
ppc_dt[gf > 0.98]
ppc_dt[gf > 0.98, by = grcode]
ppc_dt[, .SD[gf > 0.98], by = grcode]
ppc_dt[, .SD[gf > 0.98, min(devlag)], by = grcode]
ppc_dt[, .SD[gf > 0.98, min(devlag)], by = grcode][, order(V1)]
ppc_dt[, .SD[gf > 0.98, min(devlag)], by = grcode][, sort(V1)]
median_time <- apply(extract(mi_2_stanfit)$t_098, 1, median)

maxloss_dt <- multi_dt[,.SD[devlag == max(devlag)]
                       ,by = .(grcode, accyear)
                       ][, .(grcode, accyear, totloss = cumloss)]

ppc_dt <- merge(multi_dt, maxloss_dt, by = c("grcode", "accyear"))
ppc_dt <- ppc_dt[accyear <= 1990][, .(grcode, accyear, premium, devlag, cumloss, totloss, gf = cumloss / totloss)]

ppc_dt
extract(mi_2_stanfit)$t_098
ppc_dt
ppc_dt[, .SD[gf > 0.98], by = grcode]
ppc_dt[, .SD[gf > 0.98], by = grcode][, min(devlag), by = grcode]
extract(mi_2_stanfit)$t_098
apply(extract(mi_2_stanfit)$t_098, 1, function(x) quantile(x, probs = c(0.25, 0.5, 0.75)))
str(apply(extract(mi_2_stanfit)$t_098, 1, function(x) quantile(x, probs = c(0.25, 0.5, 0.75))))
str(apply(extract(mi_2_stanfit)$t_098, 2, function(x) quantile(x, probs = c(0.25, 0.5, 0.75))))
apply(extract(mi_2_stanfit)$t_098, 2, function(x) quantile(x, probs = c(0.25, 0.5, 0.75)))
melt(apply(extract(mi_2_stanfit)$t_098, 2, function(x) quantile(x, probs = c(0.25, 0.5, 0.75))))
melt(t(apply(extract(mi_2_stanfit)$t_098, 2, function(x) quantile(x, probs = c(0.25, 0.5, 0.75)))))
apply(extract(mi_2_stanfit)$t_098, 2, function(x) quantile(x, probs = c(0.25, 0.5, 0.75)))
t(apply(extract(mi_2_stanfit)$t_098, 2, function(x) quantile(x, probs = c(0.25, 0.5, 0.75))))
t(apply(extract(mi_2_stanfit)$t_098, 2, function(x) quantile(x, probs = c(0.1, 0.5, 0.9))))
ppc_dt
ppc_dt <- merge(multi_dt, maxloss_dt, by = c("grcode", "accyear"))
ppc_dt <- ppc_dt[accyear <= 1990][, .(grcode, accyear, premium, devlag, cumloss, totloss, gf = cumloss / totloss)]
ppc_dt <- ppc_dt[, .SD[gf > 0.98], by = grcode][, min(devlag), by = grcode]

ppc_dt
ppc_dt <- merge(multi_dt, maxloss_dt, by = c("grcode", "accyear"))
ppc_dt <- ppc_dt[accyear <= 1990][, .(grcode, accyear, premium, devlag, cumloss, totloss, gf = cumloss / totloss)]
ppc_dt <- ppc_dt[, .SD[gf > 0.98], by = grcode][, .(minlag = min(devlag)), by = grcode]
ppc_dt
ppc_dt
t(apply(extract(mi_2_stanfit)$t_098, 2, function(x) quantile(x, probs = c(0.1, 0.5, 0.9))))
data.frame(t(apply(extract(mi_2_stanfit)$t_098, 2, function(x) quantile(x, probs = c(0.1, 0.5, 0.9)))))
temp <- data.frame(t(apply(extract(mi_2_stanfit)$t_098, 2, function(x) quantile(x, probs = c(0.1, 0.5, 0.9)))))
rownames(temp) <- c("Q10", "Q50", "Q90")
row.names(temp) <- c("Q10", "Q50", "Q90")
colnames(temp) <- c("Q10", "Q50", "Q90")
temp
temp$grcode <- use_grcode
temp
ggplot() + geom_errorbar(aes(x = as.character(grcode), y = Q50, ymin = Q10, ymax = Q90), data = temp)
ggplot() + geom_errorbar(aes(x = as.character(grcode), y = Q50, ymin = Q10, ymax = Q90), data = temp, width = 0)
ggplot() + geom_errorbar(aes(x = as.character(grcode), y = Q50, ymin = Q10, ymax = Q90), data = temp, width = 0) + geom_point(aes(x = as.character(grcode), y = Q50)
ggplot() + geom_errorbar(aes(x = as.character(grcode), y = Q50, ymin = Q10, ymax = Q90), data = temp, width = 0) + geom_point(aes(x = as.character(grcode), y = Q50))
ggplot() + geom_errorbar(aes(x = as.character(grcode), y = Q50, ymin = Q10, ymax = Q90), data = temp, width = 0) + geom_point(aes(x = as.character(grcode), y = Q50), data = temp)
ppc_dt
ggplot() + geom_errorbar(aes(x = as.character(grcode), y = Q50, ymin = Q10, ymax = Q90), data = temp, width = 0) + geom_point(aes(x = as.character(grcode), y = Q50), data = temp) + geom_point(aes(x = grcode, y = minlag), data = ppc_dt, colour = 'red')
ggplot() + geom_errorbar(aes(x = as.character(grcode), y = Q50, ymin = Q10, ymax = Q90), data = temp, width = 0) + geom_point(aes(x = as.character(grcode), y = Q50), data = temp) + geom_point(aes(x = as.character(grcode), y = minlag), data = ppc_dt, colour = 'red')
lagdata_dt <- merge(multi_dt, maxloss_dt, by = c("grcode", "accyear"))
lagdata_dt <- lagdata_dt[accyear <= 1990][, .(grcode, accyear, premium, devlag, cumloss, totloss, gf = cumloss / totloss)]
lagdata_dt <- lagdata_dt[, .SD[gf > 0.98], by = grcode][, .(minlag = min(devlag)), by = grcode]

ppc_dt <- data.table(t(apply(extract(mi_2_stanfit)$t_098, 2, function(x) quantile(x, probs = c(0.1, 0.5, 0.9)))))

ppc_dt
ppc_dt[, grcode := use_grcode[.I]]
ppc_dt
knit2pdf("talkbm201604.Rnw")
median_time <- apply(extract(mi_2_stanfit)$t_098, 1, median)

maxloss_dt <- multi_dt[,.SD[devlag == max(devlag)]
                       ,by = .(grcode, accyear)
                       ][, .(grcode, accyear, totloss = cumloss)]

lagdata_dt <- merge(multi_dt, maxloss_dt, by = c("grcode", "accyear"))
lagdata_dt <- lagdata_dt[accyear <= 1990][, .(grcode, accyear, premium, devlag, cumloss, totloss, gf = cumloss / totloss)]
lagdata_dt <- lagdata_dt[, .SD[gf > 0.98], by = grcode][, .(minlag = min(devlag)), by = grcode]

ppc_dt <- data.table(t(apply(extract(mi_2_stanfit)$t_098, 2, function(x) quantile(x, probs = c(0.1, 0.5, 0.9)))))

ppc_dt    [, grcode := as.character(use_grcode)]
lagdata_dt[, grcode := as.character(grcode)]


ggplot() +
    geom_errorbar(aes(x = grcode, y = `50%`, ymin = `10%`, ymax = `90%`), data = lagdata_dt, width = 0) +
    geom_point(aes(x = grcode, y = `50%`), data = lagdata_dt) +
    geom_point(aes(x = grcode, y = minlag), data = ppc_dt, colour = 'red')

lagdata_dt
ppc_dt
ppc_dt
median_time <- apply(extract(mi_2_stanfit)$t_098, 1, median)

maxloss_dt <- multi_dt[,.SD[devlag == max(devlag)]
                       ,by = .(grcode, accyear)
                       ][, .(grcode, accyear, totloss = cumloss)]

lagdata_dt <- merge(multi_dt, maxloss_dt, by = c("grcode", "accyear"))
lagdata_dt <- lagdata_dt[accyear <= 1990][, .(grcode, accyear, premium, devlag, cumloss, totloss, gf = cumloss / totloss)]
lagdata_dt <- lagdata_dt[, .SD[gf > 0.98], by = grcode][, .(minlag = min(devlag)), by = grcode]

ppc_dt <- data.table(t(apply(extract(mi_2_stanfit)$t_098, 2, function(x) quantile(x, probs = c(0.1, 0.5, 0.9)))))

ppc_dt    [, grcode := as.character(use_grcode)]
lagdata_dt[, grcode := as.character(grcode)]


ggplot() +
    geom_errorbar(aes(x = grcode, y = `50%`, ymin = `10%`, ymax = `90%`), data = ppc_dt, width = 0) +
    geom_point(aes(x = grcode, y = `50%`), data = ppc_dt) +
    geom_point(aes(x = grcode, y = minlag), data = lagdata_dt, colour = 'red')

median_time <- apply(extract(mi_2_stanfit)$t_098, 1, median)

maxloss_dt <- multi_dt[,.SD[devlag == max(devlag)]
                       ,by = .(grcode, accyear)
                       ][, .(grcode, accyear, totloss = cumloss)]

lagdata_dt <- merge(multi_dt, maxloss_dt, by = c("grcode", "accyear"))
lagdata_dt <- lagdata_dt[accyear <= 1990][, .(grcode, accyear, premium, devlag, cumloss, totloss, gf = cumloss / totloss)]
lagdata_dt <- lagdata_dt[, .SD[gf > 0.98], by = grcode][, .(minlag = min(devlag)), by = grcode]

ppc_dt <- data.table(t(apply(extract(mi_2_stanfit)$t_098, 2, function(x) quantile(x, probs = c(0.1, 0.5, 0.9)))))

ppc_dt    [, grcode := factor(use_grcode, levels = use_grcode)]
lagdata_dt[, grcode := factor(grcode, levels = grcode)]


ggplot() +
    geom_errorbar(aes(x = grcode, y = `50%`, ymin = `10%`, ymax = `90%`), data = ppc_dt, width = 0) +
    geom_point(aes(x = grcode, y = `50%`), data = ppc_dt) +
    geom_point(aes(x = grcode, y = minlag), data = lagdata_dt, colour = 'red')

knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
?advi
?vb
knit2pdf("talkbm201604.Rnw")
lsos()
mi_2_stanvb
head(mi_2_stanvb)
str(mi_2_stanvb)
lsos()
extract(mi_2_stanvb)$omega
str(extract(mi_2_stanvb)$omega)
str(extract(mi_1_stanvb)$omega)
str(extract(mi_2_stanfit)$omega)
ggplot() + geom_density(aes(x = extract(mi_2_stanvb)$omega[1])) + geom_density(aes(x = extract(mi_2_stanfit)$omega[2]), colour = 'blue')
ggplot() + geom_density(aes(x = extract(mi_2_stanvb)$omega[1])) + geom_density(aes(x = extract(mi_2_stanfit)$omega[1]), colour = 'blue')
extract(mi_2_stanvb)$omega[1]
extract(mi_2_stanvb)$omega
extract(mi_2_stanvb)$omega[,1]
ggplot() + geom_density(aes(x = extract(mi_2_stanvb)$omega[,1])) + geom_density(aes(x = extract(mi_2_stanfit)$omega[,1]), colour = 'blue')
str(extract(mi_2_stanvb))
knit2pdf("talkbm201604.Rnw")
knit2pdf("talkbm201604.Rnw")
q()
y
source("run_solvency2.R", echo = TRUE)
lsos()
extract(mi_2_stanfit)
str(extract(mi_2_stanfit))
lsos()
rm(list = ls())
source("run_solvency2.R")
source("run_solvency2.R")
lsos()
extract(lgm_1_stanfit)
str(extract(lgm_1_stanfit))
extract(lgm_1_stanfit)$loss_prediction[, 1, ]
extract(lgm_1_stanfit)$loss_prediction[, 7, ]
extract(lgm_1_stanfit)$loss_prediction[, 8, ]
extract(lgm_1_stanfit)$loss_prediction[, 8, 4]
quantile(extract(lgm_1_stanfit)$loss_prediction[, 8, 4], 0.995)
quantile(extract(lgm_1_stanfit)$loss_prediction[, 7, 3], 0.995)
extract(lgm_1_stanfit)$loss_prediction[, 7, 3]
extract(lgm_1_stanfit)$loss_prediction[, 7, ]
extract(lgm_1_stanfit)$loss_prediction[, 1, ]
extract(lgm_1_stanfit)$loss_prediction[, 2, ]
extract(lgm_1_stanfit)$loss_prediction[, 3, ]
extract(lgm_1_stanfit)$loss_prediction[, 1, 10]
extract(lgm_1_stanfit)$loss_prediction[, 2, 9]
extract(lgm_1_stanfit)$loss_prediction[, 2, 10]
extract(lgm_1_stanfit)$loss_prediction[, 3, 9]
extract(lgm_1_stanfit)$loss_prediction[, 10, 2]
extract(lgm_1_stanfit)$loss_prediction[, 10, 1]
extract(lgm_1_stanfit)$loss_prediction[, 10, 2]
extract(lgm_1_stanfit)$loss_prediction[, 1, 11]
extract(lgm_1_stanfit)$loss_prediction[, 2, 10]
source("run_solvency2.R", echo = TRUE)
lsos()
solv2_sample
qplot(solv2_sample, geom = 'density')
q()
y
source("run_solvency2.R", echo = TRUE)
solv2_sample
ggplot() + geom_density(aes(x = solv2_sample))
extract(lgm_1_stanfit)$loss_prediction[,8,3]
ggplot() + geom_density(aes(x = solv2_sample))
source("run_solvency2.R", echo = TRUE)
ggplot() + geom_density(aes(x = solv2_sample))
source("run_solvency2.R", echo = TRUE)
 q()
y
